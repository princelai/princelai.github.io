<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Solarck</title><link href="https://www.solarck.com/" rel="alternate"></link><link href="https://www.solarck.com/feeds/all.atom.xml" rel="self"></link><id>https://www.solarck.com/</id><updated>2018-07-13T12:35:00+08:00</updated><entry><title>解决Haproxy用Systemd启动失败的问题</title><link href="https://www.solarck.com/systemd-wait-network-online.html" rel="alternate"></link><published>2018-07-13T12:35:00+08:00</published><updated>2018-07-13T12:35:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-07-13:/systemd-wait-network-online.html</id><summary type="html">&lt;h1 id="wen-ti-miao-shu"&gt;问题描述&lt;/h1&gt;
&lt;p&gt;配置好Haproxy的配置文件，手动可以无错误开启，但是&lt;code&gt;Systemctl enable haproxy.service&lt;/code&gt;开机启动每次都报错，系统启动后，手动开启还是没有问题。&lt;/p&gt;
&lt;h1 id="fen-xi-yuan-yin"&gt;分析原因&lt;/h1&gt;
&lt;h3 id="haproxypei-zhi-wen-ti"&gt;haproxy配置问题&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/etc/haproxy.cfg&lt;/code&gt;是配置文件，因为手动指定配合文件可以启动，而且测试配置文件也没有报错或警报，所以首先排除是配置的问题。&lt;/p&gt;
&lt;h3 id="systemdfu-wu-pei-zhi-wen-ti"&gt;systemd服务配置问题&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;haproxy.service&lt;/code&gt;是systemd用来启动服务的配置文件，第一眼看配置后，以为是创建PID没有权限，增加&lt;code&gt;User=root&lt;/code&gt;字段，但是重启后依然报错。原版配置只有&lt;code&gt;After=network.target&lt;/code&gt;，手动添加&lt;code&gt;Wants=network.target&lt;/code&gt;重启后，依然报错。&lt;/p&gt;
&lt;h3 id="cha-kan-ri-zhi"&gt;查看日志&lt;/h3&gt;
&lt;p&gt;正要灰心的时候，决定最后一搏，查看systemd启动日志，看看能不能找到点线索。&lt;/p&gt;
&lt;p&gt;查看最近一次启动中haproxy的日志&lt;/p&gt;
&lt;p&gt;&lt;code&gt;journalctl -b -0 …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h1 id="wen-ti-miao-shu"&gt;问题描述&lt;/h1&gt;
&lt;p&gt;配置好Haproxy的配置文件，手动可以无错误开启，但是&lt;code&gt;Systemctl enable haproxy.service&lt;/code&gt;开机启动每次都报错，系统启动后，手动开启还是没有问题。&lt;/p&gt;
&lt;h1 id="fen-xi-yuan-yin"&gt;分析原因&lt;/h1&gt;
&lt;h3 id="haproxypei-zhi-wen-ti"&gt;haproxy配置问题&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/etc/haproxy.cfg&lt;/code&gt;是配置文件，因为手动指定配合文件可以启动，而且测试配置文件也没有报错或警报，所以首先排除是配置的问题。&lt;/p&gt;
&lt;h3 id="systemdfu-wu-pei-zhi-wen-ti"&gt;systemd服务配置问题&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;haproxy.service&lt;/code&gt;是systemd用来启动服务的配置文件，第一眼看配置后，以为是创建PID没有权限，增加&lt;code&gt;User=root&lt;/code&gt;字段，但是重启后依然报错。原版配置只有&lt;code&gt;After=network.target&lt;/code&gt;，手动添加&lt;code&gt;Wants=network.target&lt;/code&gt;重启后，依然报错。&lt;/p&gt;
&lt;h3 id="cha-kan-ri-zhi"&gt;查看日志&lt;/h3&gt;
&lt;p&gt;正要灰心的时候，决定最后一搏，查看systemd启动日志，看看能不能找到点线索。&lt;/p&gt;
&lt;p&gt;查看最近一次启动中haproxy的日志&lt;/p&gt;
&lt;p&gt;&lt;code&gt;journalctl -b -0 -u haproxy&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: haproxy.service: Main process exited, &lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/FAILURE
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: haproxy.service: Failed with result &lt;span class="s1"&gt;'exit-code'&lt;/span&gt;.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: Failed to start HAProxy Load Balancer.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: haproxy.service: Service &lt;span class="nv"&gt;RestartSec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;100ms expired, scheduling restart.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: haproxy.service: Scheduled restart job, restart counter is at &lt;span class="m"&gt;1&lt;/span&gt;.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: Stopped HAProxy Load Balancer.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc systemd&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: Starting HAProxy Load Balancer...
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc haproxy&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;ALERT&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;193&lt;/span&gt;/103220 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : parsing &lt;span class="o"&gt;[&lt;/span&gt;/etc/haproxy/haproxy.cfg:36&lt;span class="o"&gt;]&lt;/span&gt; : &lt;span class="s1"&gt;'server server1'&lt;/span&gt; : could not resolve address &lt;span class="s1"&gt;'xxxx.com'&lt;/span&gt;.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc haproxy&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;ALERT&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;193&lt;/span&gt;/103220 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : parsing &lt;span class="o"&gt;[&lt;/span&gt;/etc/haproxy/haproxy.cfg:37&lt;span class="o"&gt;]&lt;/span&gt; : &lt;span class="s1"&gt;'server server2'&lt;/span&gt; : could not resolve address &lt;span class="s1"&gt;'xxxx.com'&lt;/span&gt;.
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:20 kevin-pc haproxy&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;ALERT&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;193&lt;/span&gt;/103220 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;554&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; : parsing &lt;span class="o"&gt;[&lt;/span&gt;/etc/haproxy/haproxy.cfg:38&lt;span class="o"&gt;]&lt;/span&gt; : &lt;span class="s1"&gt;'server server3'&lt;/span&gt; : could not resolve address &lt;span class="s1"&gt;'xxxx.com'&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;原因找到了，原来是我在haproxy配置文件的backend段中，使用了域名而不是IP，导致解析失败。但是明明我已经指定了haproxy的启动在network之后了，为什么还是会这个样子呢？&lt;/p&gt;
&lt;p&gt;答案只能从network的服务中找&lt;/p&gt;
&lt;p&gt;&lt;code&gt;journalctl -b -0 -u NetworkManager&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2279&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;: activation: beginning transaction &lt;span class="o"&gt;(&lt;/span&gt;timeout in &lt;span class="m"&gt;45&lt;/span&gt; seconds&lt;span class="o"&gt;)&lt;/span&gt;
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2566&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   address &lt;span class="m"&gt;172&lt;/span&gt;.168.201.33
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2566&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   plen &lt;span class="m"&gt;24&lt;/span&gt;
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2566&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   expires in &lt;span class="m"&gt;86400&lt;/span&gt; seconds
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2567&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   nameserver &lt;span class="s1"&gt;'172.168.13.100'&lt;/span&gt;
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2567&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   nameserver &lt;span class="s1"&gt;'202.106.0.20'&lt;/span&gt;
Jul &lt;span class="m"&gt;13&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;:32:22 kevin-pc NetworkManager&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;493&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: &amp;lt;info&amp;gt;  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1531449142&lt;/span&gt;.2567&lt;span class="o"&gt;]&lt;/span&gt; dhcp4 &lt;span class="o"&gt;(&lt;/span&gt;enp0s25&lt;span class="o"&gt;)&lt;/span&gt;:   gateway &lt;span class="m"&gt;172&lt;/span&gt;.168.201.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对比两段日志的时间，原来虽然haproxy启动在network之后，但是network刚刚启动haproxy就开始启动，而network的启动内容比较多，还有很多网络通信，可能完全启动完需要一点时间。haproxy的启动时间比dhcp启动要早了2秒，这时无法进行DNS解析，所以就会造成启动失败，之前的所有问题也都说的通了。&lt;/p&gt;
&lt;h1 id="jie-jue-fang-fa_1"&gt;解决方法&lt;/h1&gt;
&lt;p&gt;知道了问题的原因，那么就要解决它。只要让haproxy在network完全启动后再启动，就应该可以正常启动了。那么如何做呢？&lt;/p&gt;
&lt;p&gt;首先要替换&lt;code&gt;haproxy.service&lt;/code&gt;中的&lt;code&gt;After&lt;/code&gt;和&lt;code&gt;Wants&lt;/code&gt;字段，用&lt;code&gt;network-online.target&lt;/code&gt;替换&lt;code&gt;network.target&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network-online.target&lt;/span&gt;
&lt;span class="na"&gt;Wants&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network-online.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后启动一个自带的网络等待服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; NetworkManager-wait-online.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你是使用&lt;code&gt;systemd-network&lt;/code&gt;来管理网络服务，那么需要启动另外一个服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; systemd-networkd-wait-online.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启后，一切问题都解决了。&lt;/p&gt;
&lt;h1 id="can-kao"&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/"&gt;Running Services After the Network is&amp;nbsp;up&lt;/a&gt;&lt;/p&gt;</content><category term="haproxy"></category><category term="systemd"></category></entry><entry><title>快速配置V2ray</title><link href="https://www.solarck.com/v2ray-quick-config.html" rel="alternate"></link><published>2018-07-13T10:08:00+08:00</published><updated>2018-07-13T10:08:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-07-13:/v2ray-quick-config.html</id><summary type="html">&lt;h1 id="fu-wu-qi-duan-pei-zhi"&gt;服务器端配置&lt;/h1&gt;
&lt;p&gt;服务器系统使用的是Debian 9&amp;nbsp;x86_64，Ubuntu大部分操作都通用。如果是CentOS的话，该文章仅作为参考。&lt;/p&gt;
&lt;h3 id="you-hua-wang-luo"&gt;优化网络&lt;/h3&gt;
&lt;p&gt;主要涉及bbr的安装配置，需要VPS是KVM架构，具体可以参照&lt;a href="https://www.solarck.com/shadowsocks-libev.html"&gt;之前的文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="an-zhuang-v2ray"&gt;安装V2ray&lt;/h3&gt;
&lt;p&gt;官方提供了安装脚本，需要系统使用systemd管理系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://install.direct/go.sh
bash go.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装好后，主要文件如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;/etc/systemd/system/v2ray.service&lt;/code&gt;：启动服务
&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;：配置文件
&lt;code&gt;/usr/bin/v2ray/v2ray&lt;/code&gt;：主程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="tlsyu-ming-zheng-shu"&gt;TLS域名证书&lt;/h3&gt;
&lt;p&gt;因为最终配置要用到TLS链接，在这步之前，你需要一个域名，免费的也无所谓。&lt;/p&gt;
&lt;p&gt;工具使用&lt;a href="https://github.com/Neilpang/acme.sh/wiki"&gt;acme.sh …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1 id="fu-wu-qi-duan-pei-zhi"&gt;服务器端配置&lt;/h1&gt;
&lt;p&gt;服务器系统使用的是Debian 9&amp;nbsp;x86_64，Ubuntu大部分操作都通用。如果是CentOS的话，该文章仅作为参考。&lt;/p&gt;
&lt;h3 id="you-hua-wang-luo"&gt;优化网络&lt;/h3&gt;
&lt;p&gt;主要涉及bbr的安装配置，需要VPS是KVM架构，具体可以参照&lt;a href="https://www.solarck.com/shadowsocks-libev.html"&gt;之前的文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="an-zhuang-v2ray"&gt;安装V2ray&lt;/h3&gt;
&lt;p&gt;官方提供了安装脚本，需要系统使用systemd管理系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://install.direct/go.sh
bash go.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装好后，主要文件如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;/etc/systemd/system/v2ray.service&lt;/code&gt;：启动服务
&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;：配置文件
&lt;code&gt;/usr/bin/v2ray/v2ray&lt;/code&gt;：主程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="tlsyu-ming-zheng-shu"&gt;TLS域名证书&lt;/h3&gt;
&lt;p&gt;因为最终配置要用到TLS链接，在这步之前，你需要一个域名，免费的也无所谓。&lt;/p&gt;
&lt;p&gt;工具使用&lt;a href="https://github.com/Neilpang/acme.sh/wiki"&gt;acme.sh&lt;/a&gt;，这是用来签发&lt;a href="https://letsencrypt.org/"&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;免费证书的脚本，非常好用。&lt;/p&gt;
&lt;h4 id="an-zhuang-acme"&gt;&lt;em&gt;安装acme&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;安装依赖工具&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt-get install -y socat netcat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装acme.sh脚本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl  https://get.acme.sh &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认是安装在&lt;code&gt;～/.acme.sh/&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="qian-fa-zheng-shu"&gt;&lt;em&gt;签发证书&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;我使用的是ecc证书，需要把domain换成自己的域名&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~/.acme.sh/acme.sh --issue -d domain --standalone -k ec-256
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="an-zhuang-zheng-shu"&gt;&lt;em&gt;安装证书&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;证书会被安装到&lt;code&gt;/etc/v2ray&lt;/code&gt;目录下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~/.acme.sh/acme.sh --installcert -d domain --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --ecc
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="zheng-shu-xu-qi"&gt;&lt;em&gt;证书续期&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;执行完签发命令后，系统已经加上了crond自动签发，如果你想手动签发，可以执行下面的命令。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~/.acme.sh/acme.sh --renew -d domain --force --ecc&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="ben-di-pei-zhi_2"&gt;本地配置&lt;/h1&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;p&gt;因为我使用的是Manjaro，一个基于Archlinux的Linux版本，所有安装只要一条命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -Sy v2ray
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果你用的是其他系统，可以参考服务器的安装脚本。&lt;/p&gt;
&lt;h1 id="pei-zhi-wen-jian_1"&gt;配置文件&lt;/h1&gt;
&lt;h3 id="pei-zhi-shuo-ming"&gt;配置说明&lt;/h3&gt;
&lt;p&gt;我当前使用的连接方式是TCP+TLS这种，根据官方和网上收集的信息，据说当前最好的配置是WebSocket+&lt;span class="caps"&gt;WEB&lt;/span&gt;+&lt;span class="caps"&gt;TLS&lt;/span&gt;+&lt;span class="caps"&gt;CDN&lt;/span&gt;，我没有选择这种连接方式有以下几点原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Websocket效率低于TCP&lt;/li&gt;
&lt;li&gt;多层转发导致速度可能会变慢&lt;/li&gt;
&lt;li&gt;配置较麻烦&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你的ISP没有QOS，没有TCP阻断，你连接服务器的流量没有很大的话，是没有必要折腾这种连接方式的。当然我在写这篇文章之前还使用过H2+TLS的连接方式，但是不知是服务器没有加Caddy转发还是H2方式不稳定，断流严重，换成TCP+TLS后，连接稳定，速度尚可，未出现断流。&lt;/p&gt;
&lt;p&gt;每个人每个地区的ISP情况不尽相同，所以多试才能找到最适合你的配置，更多配置可以参考&lt;a href="https://github.com/KiriKira/vTemplate"&gt;配置模板&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="tcptlspei-zhi"&gt;&lt;span class="caps"&gt;TCP&lt;/span&gt;+TLS配置&lt;/h3&gt;
&lt;h4 id="pei-zhi-shuo-ming_1"&gt;&lt;strong&gt;配置说明&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;我有三台性能较弱的VPS，所以三台分别安装并部署了服务端的配置，而在本地客户端的outbound中连接三个服务器，v2ray可以进行简单的轮寻进行负载均衡。&lt;/p&gt;
&lt;p&gt;为了简化操作，UUID设置为相同，当然不嫌麻烦的话可以设置为不同，但要和每台服务器的UUID相对应。&lt;/p&gt;
&lt;p&gt;因为我认为vmess协议加密已经足够强壮，所以每台就没有再设置内容加密，如果不放心，可以使用auto或者AEAD方式加密。另外根据官方的测试，貌似&lt;code&gt;aes-256-gcm&lt;/code&gt; 和&lt;code&gt;chacha20-ietf-poly1305&lt;/code&gt;两种加密方式传输效率比不加密的效率还要高，可能与硬件加密有关系吧。&lt;/p&gt;
&lt;p&gt;所有配置的详细内容都可以在官方文档或白话文教程里找到，其实配置v2ray并没有那么复杂。&lt;/p&gt;
&lt;p&gt;最后贴上我的自用配置，生成UUID可以使用&lt;a href="https://www.uuidgenerator.net/"&gt;&lt;span class="caps"&gt;UUID&lt;/span&gt; Generator&lt;/a&gt;这个网站，或者Linux用户可以使用下面命令&lt;code&gt;cat /proc/sys/kernel/random/uuid&lt;/code&gt;生成。&lt;/p&gt;
&lt;h4 id="fu-wu-duan"&gt;&lt;strong&gt;服务端&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"log"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"loglevel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"warning"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"access"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/var/log/v2ray/access.log"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/var/log/v2ray/error.log"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"inbound"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"vmess"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"clients"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"xxxxxxxxx-xxxxxxxxxxx-xxxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"alterId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"none"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"udp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"streamSettings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"tlsSettings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;"certificates"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;"certificateFile"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/etc/v2ray/v2ray.crt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;"keyFile"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/etc/v2ray/v2ray.key"&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"outbound"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"freedom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"outboundDetour"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"blackhole"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
      &lt;span class="nt"&gt;"tag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"blocked"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nt"&gt;"routing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"strategy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"geoip:private"&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="nt"&gt;"outboundTag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"blocked"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="ke-hu-duan"&gt;&lt;strong&gt;客户端&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"log"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"loglevel"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"warning"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"access"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/var/log/v2ray/access.log"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"error"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"/var/log/v2ray/error.log"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"inbound"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"socks"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"domainOverride"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"http"&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"auth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"noauth"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"udp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"outbound"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"vmess"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"vnext"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"domain.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"users"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"xxxxxxxxx-xxxxxxxxxxx-xxxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"alterId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"none"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"domain.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"users"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"xxxxxxxxx-xxxxxxxxxxx-xxxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"alterId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"none"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"domain.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"users"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"xxxxxxxxx-xxxxxxxxxxx-xxxxxx"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"alterId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"none"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"streamSettings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"security"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tls"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"outboundDetour"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"protocol"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"freedom"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
      &lt;span class="nt"&gt;"tag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"direct"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nt"&gt;"dns"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"servers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"101.6.6.6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"101.132.183.99"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"193.112.15.186"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"8.8.8.8"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"routing"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"strategy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"settings"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"domainStrategy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"IPIfNonMatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"udp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;"outboundTag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"direct"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"geoip:cn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"geoip:private"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"172.168.0.0/16"&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"0-10000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tcp,udp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"outboundTag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"direct"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"domain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"geosite:cn"&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="nt"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"0-10000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"network"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"tcp,udp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nt"&gt;"outboundTag"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"direct"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="can-kao_2"&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.v2ray.com/"&gt;v2ray官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://toutyrater.github.io"&gt;v2ray白话文教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Neilpang/acme.sh/wiki"&gt;acme.sh&amp;nbsp;wiki&lt;/a&gt;&lt;/p&gt;</content><category term="v2ray"></category><category term="acme.sh"></category><category term="tls"></category></entry><entry><title>LEDE/OpenWRT路由器打造家庭媒体影音中心（二）</title><link href="https://www.solarck.com/lede-media-center2.html" rel="alternate"></link><published>2018-07-12T16:07:00+08:00</published><updated>2018-07-12T16:07:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-07-12:/lede-media-center2.html</id><summary type="html">&lt;h1 id="usbqu-dong"&gt;USB驱动&lt;/h1&gt;
&lt;h3 id="cha-kan-yi-an-zhuang-de-qu-dong"&gt;查看已安装的驱动&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg list-installed | grep usb
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="an-zhuang-qu-dong-he-gong-ju"&gt;安装驱动和工具&lt;/h3&gt;
&lt;p&gt;如果下列驱动未出现在上一步的结果中，请务必首先安装缺失的驱动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install kmod-usb-core kmod-usb-storage
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;kmod-usb-core&lt;/code&gt;:USB核心驱动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-usb-storage&lt;/code&gt;:大容量存储设备驱动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-usb2&lt;/code&gt;:WRT1900ACS有一个USB2.0/eSATA口，可以不安装&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-ata-marvell-sata&lt;/code&gt;:Marvell&amp;nbsp;SATA接口驱动，可以不安装&lt;/p&gt;
&lt;p&gt;网上搜到的教程和官方指南里还让安装一些其他的应用，但这些都是不必要或已被编译至内核中，包括：&lt;code&gt;kmod-usb-ohci&lt;/code&gt;、&lt;code&gt;kmod-usb-uhci&lt;/code&gt;、&lt;code&gt;kmod-usb3&lt;/code&gt;、&lt;code&gt;kmod-usb-storage-uas&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang-xiang-guan-gong-ju"&gt;安装相关工具&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install usbutils block-mount e2fsprogs kmod-fs-ext4 gdisk fdisk 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mount-utils&lt;/code&gt;:提供unmount,findmnt&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usbutils&lt;/code&gt;:提供lsusb&lt;/p&gt;
&lt;p&gt;&lt;code&gt;block-mount …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h1 id="usbqu-dong"&gt;USB驱动&lt;/h1&gt;
&lt;h3 id="cha-kan-yi-an-zhuang-de-qu-dong"&gt;查看已安装的驱动&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg list-installed | grep usb
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="an-zhuang-qu-dong-he-gong-ju"&gt;安装驱动和工具&lt;/h3&gt;
&lt;p&gt;如果下列驱动未出现在上一步的结果中，请务必首先安装缺失的驱动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install kmod-usb-core kmod-usb-storage
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;kmod-usb-core&lt;/code&gt;:USB核心驱动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-usb-storage&lt;/code&gt;:大容量存储设备驱动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-usb2&lt;/code&gt;:WRT1900ACS有一个USB2.0/eSATA口，可以不安装&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-ata-marvell-sata&lt;/code&gt;:Marvell&amp;nbsp;SATA接口驱动，可以不安装&lt;/p&gt;
&lt;p&gt;网上搜到的教程和官方指南里还让安装一些其他的应用，但这些都是不必要或已被编译至内核中，包括：&lt;code&gt;kmod-usb-ohci&lt;/code&gt;、&lt;code&gt;kmod-usb-uhci&lt;/code&gt;、&lt;code&gt;kmod-usb3&lt;/code&gt;、&lt;code&gt;kmod-usb-storage-uas&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang-xiang-guan-gong-ju"&gt;安装相关工具&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install usbutils block-mount e2fsprogs kmod-fs-ext4 gdisk fdisk 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;mount-utils&lt;/code&gt;:提供unmount,findmnt&lt;/p&gt;
&lt;p&gt;&lt;code&gt;usbutils&lt;/code&gt;:提供lsusb&lt;/p&gt;
&lt;p&gt;&lt;code&gt;block-mount&lt;/code&gt;:提供block，查看挂载点信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;e2fsprogs&lt;/code&gt;:格式化工具mkfs&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-fs-ext4&lt;/code&gt;:格式化为ext4格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kmod-fs-ntfs&lt;/code&gt;:我不用ntfs格式，所以不安装这个，需要可以安装上&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gdisk&lt;/code&gt;:分区工具，支持GPT，硬盘容量超过2T需要用这个工具，当然容量小的也可以用这个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fdisk&lt;/code&gt;:分区工具，不支持GPT，常用来查看分区信息&lt;/p&gt;
&lt;p&gt;以下几个命令查看已连接/挂载的USB设备&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;df -h
lsusb -t
ls -l /dev/sd*
block info &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;"/dev/sd"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;小提示：硬盘格式化为什么格式最好？&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在Linux和LEDE平台上，微软的NTFS和FAT32绝对不是一个好的格式，设计的优劣不谈，这两个格式不是Linux平台原生支持的，安装额外的驱动可能会带来发热、读写速度慢、不稳定等多种负面效果。所以，对于机械硬盘来说，EXT4和BTRFS是最好的，对于SSD来说，F2FS格式是最好的。&lt;/p&gt;
&lt;h1 id="ying-pan-xiang-guan-cao-zuo_1"&gt;硬盘相关操作&lt;/h1&gt;
&lt;h3 id="ying-pan-fen-qu"&gt;硬盘分区&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gdisk /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据软件提示进行操作，主要命令有：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;n&lt;/code&gt;:新建分区&lt;/p&gt;
&lt;p&gt;&lt;code&gt;w&lt;/code&gt;:保存分区内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;d&lt;/code&gt;:删除分区&lt;/p&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt;:打印分区列表&lt;/p&gt;
&lt;p&gt;&lt;code&gt;?&lt;/code&gt;:查看帮助&lt;/p&gt;
&lt;p&gt;这里我把一块硬盘分为两个区&lt;code&gt;/dev/sda1&lt;/code&gt;，&lt;code&gt;/dev/sda2&lt;/code&gt;，分区1大小700G，分区2大小231G，总计1T。&lt;/p&gt;
&lt;h3 id="ge-shi-hua-ying-pan"&gt;格式化硬盘&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkfs.ext4 /dev/sda1
mkfs.ext4 /dev/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果是SSD硬盘，则可以按照如下方式安装操作&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install f2fs-tools
opkg install kmod-fs-f2fs
mkfs.f2fs /dev/sda1
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="zi-dong-gua-zai-fen-qu"&gt;自动挂载分区&lt;/h3&gt;
&lt;p&gt;这一部分请根据自己&lt;code&gt;fstab&lt;/code&gt;实际内容修改使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;block detect &amp;gt; /etc/config/fstab
uci &lt;span class="nb"&gt;set&lt;/span&gt; fstab.@mount&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1'&lt;/span&gt;
uci &lt;span class="nb"&gt;set&lt;/span&gt; fstab.@mount&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1'&lt;/span&gt;
uci &lt;span class="nb"&gt;set&lt;/span&gt; fstab.@mount&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.options&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'rw'&lt;/span&gt;
uci &lt;span class="nb"&gt;set&lt;/span&gt; fstab.@mount&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.options&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'rw'&lt;/span&gt;
uci &lt;span class="nb"&gt;set&lt;/span&gt; fstab.@global&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.check_fs&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1'&lt;/span&gt;
uci commit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看当前挂载点设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uci show fstab
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;卸载/挂载服务&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;block umount &amp;amp;&amp;amp; block mount
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ying-pan-xiu-mian"&gt;硬盘休眠&lt;/h3&gt;
&lt;h4 id="hdparm"&gt;&lt;em&gt;hdparm&lt;/em&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install hdparm luci-app-hd-idle
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行下面的命令启动休眠&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hdparm -S &lt;span class="m"&gt;120&lt;/span&gt; /dev/sda1
hdparm -S &lt;span class="m"&gt;120&lt;/span&gt; /dev/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;-S后的参数含义为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0:关闭休眠&lt;/li&gt;
&lt;li&gt;1-240：数字乘以5秒是时间，在设定时间内未使用则休眠&lt;/li&gt;
&lt;li&gt;241-251：以30分钟为步进，时间为30分钟-5.5小时&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="hd-idle"&gt;&lt;em&gt;hd-idle&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;更简单的方法就是安装Luci管理工具&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install hd-idle luci-app-hd-idle
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="hd-idle" src="http://kevinstuchuang.qiniudn.com/blog-pic/lede-idle.png"/&gt;&lt;/p&gt;
&lt;h1 id="samba_2"&gt;Samba&lt;/h1&gt;
&lt;h3 id="an-zhuang-samba"&gt;安装Samba&lt;/h3&gt;
&lt;p&gt;查看可安装的版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg list &lt;span class="p"&gt;|&lt;/span&gt; grep samba
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据结果，安装适当的版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg install samba36-server luci-app-samba luci-i18n-samba-zh-cn
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="pei-zhi-fang-huo-qiang"&gt;配置防火墙&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vim /etc/config/firewall&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;config 'rule'&lt;/span&gt;
        &lt;span class="na"&gt;option 'src' 'lan'&lt;/span&gt;
        &lt;span class="na"&gt;option 'proto' 'udp'&lt;/span&gt;
        &lt;span class="na"&gt;option 'dest_port' '137-138'&lt;/span&gt;
        &lt;span class="na"&gt;option 'target' 'ACCEPT'&lt;/span&gt;

&lt;span class="na"&gt;config 'rule'&lt;/span&gt;
        &lt;span class="na"&gt;option 'src' 'lan'&lt;/span&gt;
        &lt;span class="na"&gt;option 'proto' 'tcp'&lt;/span&gt;
        &lt;span class="na"&gt;option 'dest_port' '139'&lt;/span&gt;
        &lt;span class="na"&gt;option 'target' 'ACCEPT'&lt;/span&gt;

&lt;span class="na"&gt;config 'rule'&lt;/span&gt;
        &lt;span class="na"&gt;option 'src' 'lan'&lt;/span&gt;
        &lt;span class="na"&gt;option 'proto' 'tcp'&lt;/span&gt;
        &lt;span class="na"&gt;option 'dest_port' '445'&lt;/span&gt;
        &lt;span class="na"&gt;option 'target' 'ACCEPT'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="sambapei-zhi"&gt;Samba配置&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;官方&lt;strong&gt;强烈建议&lt;/strong&gt;使用luci来配置Samba，然后通过修改临时文件来完成配置。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;路由器每次重启，&lt;code&gt;/etc/samba/smb.conf&lt;/code&gt;文件都将从&lt;code&gt;/etc/samba/smb.conf.template&lt;/code&gt;文件重新创建，所以修改配置时请修改后者。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;全局和共享配置可以在LuCi界面编辑也可以直接编辑文件，按照我的配置实现如下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁止root用户访问，防止权限出现问题&lt;/li&gt;
&lt;li&gt;允许匿名用户访问&lt;code&gt;/mnt/sda1&lt;/code&gt;，即Media文件夹&lt;/li&gt;
&lt;li&gt;访问&lt;code&gt;/mnt/sda2&lt;/code&gt;，即Document文件夹必须登录，用户只能访问到自己创建的文件夹和文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="quan-ju-pei-zhi"&gt;&lt;strong&gt;全局配置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim /etc/samba/smb.conf.template&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;#netbios name = LEDE  #不设置默认是路由器host名&lt;/span&gt;
    &lt;span class="c1"&gt;#workgroup = LEDE #不设置默认是WORKGROUP&lt;/span&gt;
    server &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Samba on LEDE
    &lt;span class="nv"&gt;syslog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;
    encrypt &lt;span class="nv"&gt;passwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
    socket &lt;span class="nv"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; TCP_NODELAY IPTOS_LOWDELAY
    unix &lt;span class="nv"&gt;charset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; UTF-8 
    &lt;span class="nv"&gt;browseable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    preferred &lt;span class="nv"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    &lt;span class="nv"&gt;security&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; user
    null &lt;span class="nv"&gt;passwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    guest &lt;span class="nv"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nobody
    invalid &lt;span class="nv"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; root
    passdb &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; smbpasswd
    smb passwd &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/samba/smbpasswd
    map to &lt;span class="nv"&gt;guest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Bad User
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="gong-xiang-wen-jian-jia-she-zhi"&gt;&lt;strong&gt;共享文件夹设置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim /etc/config/samba&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;config samba
        option charset &lt;span class="s1"&gt;'UTF-8'&lt;/span&gt;
        option homes &lt;span class="s1"&gt;'0'&lt;/span&gt;
        option interface &lt;span class="s1"&gt;'loopback lan'&lt;/span&gt;
        option name &lt;span class="s1"&gt;'Lede'&lt;/span&gt;
        option description &lt;span class="s1"&gt;'Samba on Lede'&lt;/span&gt;
        option workgroup &lt;span class="s1"&gt;'Lede'&lt;/span&gt;

config sambashare
        option name &lt;span class="s1"&gt;'Media'&lt;/span&gt;
        option path &lt;span class="s1"&gt;'/mnt/sda1'&lt;/span&gt;
        option read_only &lt;span class="s1"&gt;'no'&lt;/span&gt;
        option guest_ok &lt;span class="s1"&gt;'yes'&lt;/span&gt;
        option create_mask &lt;span class="s1"&gt;'0777'&lt;/span&gt;
        option dir_mask &lt;span class="s1"&gt;'0777'&lt;/span&gt;

config sambashare
        option path &lt;span class="s1"&gt;'/mnt/sda2'&lt;/span&gt;
        option read_only &lt;span class="s1"&gt;'no'&lt;/span&gt;
        option create_mask &lt;span class="s1"&gt;'0700'&lt;/span&gt;
        option dir_mask &lt;span class="s1"&gt;'0700'&lt;/span&gt;
        option name &lt;span class="s1"&gt;'Document'&lt;/span&gt;
        option guest_ok &lt;span class="s1"&gt;'no'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="wen-jian-jia-chu-shi-quan-xian-she-zhi"&gt;&lt;strong&gt;文件夹初始权限设置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;/mnt/sda2&lt;/code&gt;其实没必要更改所属用户和组，但是强迫症就是要给统一了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chown -R nobody /mnt/sda1
chgrp -R nogroup /mnt/sda1
chmod -R &lt;span class="m"&gt;777&lt;/span&gt; /mnt/sda1

chown -R nobody /mnt/sda2
chgrp -R nogroup /mnt/sda2
chmod -R &lt;span class="m"&gt;777&lt;/span&gt; /mnt/sda2
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="tian-jia-yong-hu"&gt;&lt;strong&gt;添加用户&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;LEDE默认不带&lt;code&gt;useradd&lt;/code&gt;命令，需要手动安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install shadow-useradd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加用户和设置密码要分两步走，首先要添加系统用户，然后再为该用户设置Samba密码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;useradd newuser
passwd newuser
smbpasswd -a newuser
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后启动/重启服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/samba restart
/etc/init.d/samba &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，Samba设置完成，也达到了我的目的，有可以匿名随意访问的共享文件夹，也有实现了权限控制的私有文件夹。而且是全平台都可以访问，Windows、Linux和手机（需要有支持SMB协议的软件）。&lt;/p&gt;
&lt;p&gt;&lt;img alt="samba" src="http://kevinstuchuang.qiniudn.com/blog-pic/lede-samba.png"/&gt;&lt;/p&gt;
&lt;h1 id="can-kao-lian-jie_2"&gt;参考链接&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/storage/usb-installing"&gt;Installing &lt;span class="caps"&gt;USB&lt;/span&gt;&amp;nbsp;Drivers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/storage/usb-drives"&gt;Using storage devices&lt;/a&gt;
&lt;a href="https://openwrt.org/docs/guide-user/services/nas/usb-storage-samba-webinterface"&gt;Share &lt;span class="caps"&gt;USB&lt;/span&gt; Hard-drive with Samba using the Luci web-interface&lt;/a&gt;
&lt;a href="https://openwrt.org/docs/guide-user/services/nas/samba_configuration"&gt;&lt;span class="caps"&gt;SMB&lt;/span&gt; Samba share&amp;nbsp;overview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/services/nas/cifs.server"&gt;cifs.server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/services/nas/samba"&gt;Samba&lt;/a&gt;&lt;/p&gt;</content><category term="openwrt"></category><category term="lede"></category><category term="wrt1900acs"></category><category term="samba"></category><category term="nas"></category></entry><entry><title>LEDE/OpenWRT路由器打造家庭媒体影音中心（一）</title><link href="https://www.solarck.com/lede-media-center1.html" rel="alternate"></link><published>2018-07-10T13:07:00+08:00</published><updated>2018-07-10T13:07:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-07-10:/lede-media-center1.html</id><summary type="html">&lt;h1 id="qian-yan"&gt;前言&lt;/h1&gt;
&lt;h3 id="ruan-ying-jian"&gt;软/硬件&lt;/h3&gt;
&lt;p&gt;软件：本文系统都是基于LEDE&amp;nbsp;17.01.4&lt;/p&gt;
&lt;p&gt;硬件：Linksys &lt;span class="caps"&gt;WRT1900ACS&lt;/span&gt;&amp;nbsp;V2&lt;/p&gt;
&lt;p&gt;其他：一台电脑，最好是Linux带SSH，Windows的话可以下个putty安装上&lt;/p&gt;
&lt;p&gt;前提：我不会从头写起，而是从路由器已刷好LEDE&amp;nbsp;17.01.4，WAN口已联网，且已经可以SSH登录之后开始，其他外设，如硬盘、硬盘盒、用于Extroot的U盘都已准备好。&lt;/p&gt;
&lt;h3 id="shi-xian-mu-de"&gt;实现目的&lt;/h3&gt;
&lt;p&gt;基于Linksys&amp;nbsp;WRT1900ACS强悍的性能和扩展功能丰富的LEDE，打造一个有权限控制的NAS，支持DLNA，可以离线下载和远程访问的DDNS系统的多媒体中心。&lt;/p&gt;
&lt;h1 id="extroot_1"&gt;Extroot&lt;/h1&gt;
&lt;p&gt;extroot的作用就是扩充存储空间，这样就可以安装更多的软件。详细介绍可以查看很早之前我写过的一篇文章&amp;mdash;&amp;mdash;&lt;a href="https://solarck.com/openwrt-extroot.html"&gt;用extroot为openwrt扩充存储空间&lt;/a&gt;，这里就不赘述了。由于那篇文章比较老，LEDE也早已经升级了好几个含本，所以实际的操作还是以下面的内容为主。&lt;/p&gt;
&lt;h3 id="an-zhuang-gong-ju"&gt;安装工具&lt;/h3&gt;
&lt;p&gt;这里我准备把U盘格式化为f2fs格式，关于各种存储格式和下面需要安装的工具的作用，我会放在下一篇文章一起讲，这一步照着做就可以了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1 id="qian-yan"&gt;前言&lt;/h1&gt;
&lt;h3 id="ruan-ying-jian"&gt;软/硬件&lt;/h3&gt;
&lt;p&gt;软件：本文系统都是基于LEDE&amp;nbsp;17.01.4&lt;/p&gt;
&lt;p&gt;硬件：Linksys &lt;span class="caps"&gt;WRT1900ACS&lt;/span&gt;&amp;nbsp;V2&lt;/p&gt;
&lt;p&gt;其他：一台电脑，最好是Linux带SSH，Windows的话可以下个putty安装上&lt;/p&gt;
&lt;p&gt;前提：我不会从头写起，而是从路由器已刷好LEDE&amp;nbsp;17.01.4，WAN口已联网，且已经可以SSH登录之后开始，其他外设，如硬盘、硬盘盒、用于Extroot的U盘都已准备好。&lt;/p&gt;
&lt;h3 id="shi-xian-mu-de"&gt;实现目的&lt;/h3&gt;
&lt;p&gt;基于Linksys&amp;nbsp;WRT1900ACS强悍的性能和扩展功能丰富的LEDE，打造一个有权限控制的NAS，支持DLNA，可以离线下载和远程访问的DDNS系统的多媒体中心。&lt;/p&gt;
&lt;h1 id="extroot_1"&gt;Extroot&lt;/h1&gt;
&lt;p&gt;extroot的作用就是扩充存储空间，这样就可以安装更多的软件。详细介绍可以查看很早之前我写过的一篇文章&amp;mdash;&amp;mdash;&lt;a href="https://solarck.com/openwrt-extroot.html"&gt;用extroot为openwrt扩充存储空间&lt;/a&gt;，这里就不赘述了。由于那篇文章比较老，LEDE也早已经升级了好几个含本，所以实际的操作还是以下面的内容为主。&lt;/p&gt;
&lt;h3 id="an-zhuang-gong-ju"&gt;安装工具&lt;/h3&gt;
&lt;p&gt;这里我准备把U盘格式化为f2fs格式，关于各种存储格式和下面需要安装的工具的作用，我会放在下一篇文章一起讲，这一步照着做就可以了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install block-mount kmod-fs-ext4 kmod-usb-storage e2fsprogs kmod-fs-f2fs f2fs-tools
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ge-shi-hua-upan"&gt;格式化U盘&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkfs.f2fs /dev/sda1
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="qian-yi-xi-tong"&gt;迁移系统&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount /dev/sda1 /mnt &lt;span class="p"&gt;;&lt;/span&gt; tar -C /overlay -cvf - . &lt;span class="p"&gt;|&lt;/span&gt; tar -C /mnt -xf - &lt;span class="p"&gt;;&lt;/span&gt; umount /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="sheng-cheng-fen-qu-biao"&gt;生成分区表&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;block detect &amp;gt; /etc/config/fstab
uci set fstab.@mount[0].target='/overlay'
uci set fstab.@mount[0].enabled='1'
uci set fstab.@mount[0].options='rw'
uci set fstab.@mount[0].fstype='f2fs'
uci commit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后&lt;code&gt;fstab&lt;/code&gt;应该如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat /etc/config/fstab&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;config global
        option anon_swap '0'
        option anon_mount '0'
        option auto_swap '1'
        option auto_mount '1'
        option delay_root '5'
        option check_fs '1'


config mount
        option enabled '1'
        option uuid 'd9aa4451-780a-4fe5-b08d-d7f0a7ae0ba4'
        option target '/overlay'
        option fstype 'f2fs'
        option options 'rw'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yan-zheng"&gt;验证&lt;/h3&gt;
&lt;p&gt;重启系统后执行命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Filesystem                Size      Used Available Use% Mounted on
/dev/root                 2.8M      2.8M         0 100% /rom
tmpfs                   250.8M    556.0K    250.2M   0% /tmp
/dev/sdb1                14.3G    496.6M     13.7G   3% /overlay
overlayfs:/overlay       14.3G    496.6M     13.7G   3% /
ubi1:syscfg              29.6M    268.0K     27.8M   1% /tmp/syscfg
tmpfs                   512.0K         0    512.0K   0% /dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果&lt;code&gt;/overlay&lt;/code&gt;分区已经变为U盘容量大小，那就是成功了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;block info&lt;/code&gt;信息也已经显示正确&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/mtdblock7: TYPE="jffs2"
/dev/ubiblock0_0: UUID="9f419b56-31564c19-0a0c1b12-a2f9b77b" VERSION="4.0" MOUNT="/rom" TYPE="squashfs"
/dev/ubi0_1: UUID="1361ff26-cc87-40f1-8b99-00caf223093c" VERSION="w4r0" TYPE="ubifs"
/dev/ubi1_0: UUID="413d13a9-0f0a-4811-a0cb-3e3786ce26d7" VERSION="w4r0" TYPE="ubifs"
/dev/sda1: UUID="d9aa4451-780a-4fe5-b08d-d7f0a7ae0ba4" VERSION="1.8" MOUNT="/overlay" TYPE="f2fs"
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="geng-huan-yuan_1"&gt;更换源&lt;/h1&gt;
&lt;h3 id="tian-jia-dui-httpsde-zhi-chi"&gt;添加对https的支持&lt;/h3&gt;
&lt;p&gt;如果你在替换源后执行更新，那么会收到一条错误消息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="caps"&gt;SSL&lt;/span&gt; support not available, please install one of the libustream-ssl-* libraries as well as the ca-bundle and ca-certificates&amp;nbsp;packages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很明显，系统还不支持SSL，因为官方的源都是http的，而我们添加的源都是https的。不过也很简单，按照错误信息的提示安装相应的包就可以了。&lt;strong&gt;这一步一定要在替换源之前执行&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install ca-certificates luci-ssl-openssl
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="geng-huan-yuan_2"&gt;更换源&lt;/h3&gt;
&lt;p&gt;国内访问LEDE官方源比较不稳定，速度也很慢，幸好&lt;a href="https://mirrors.ustc.edu.cn/lede/"&gt;中科大&lt;/a&gt;和&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/lede/"&gt;清华&lt;/a&gt;都提供了LEDE的软件镜像源，为了后边操作能够顺利进行，首先需要更换源。&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;LEDE&lt;/span&gt;&amp;nbsp;OPKG的软件源配置文件有两个：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/opkg/distfeeds.conf&lt;/code&gt;：发行版本自带的官方源，需要把里面的内容全部注释掉或者清空。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/opkg/customfeeds.conf&lt;/code&gt;：自定义源，把我们需要的内容粘贴到这里，内容如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;src/gz reboot_core https://mirrors.ustc.edu.cn/lede/releases/17.01.4/targets/mvebu/generic/packages&lt;/span&gt;
&lt;span class="na"&gt;src/gz reboot_base https://mirrors.ustc.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/base&lt;/span&gt;
&lt;span class="na"&gt;src/gz reboot_luci https://mirrors.ustc.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/luci&lt;/span&gt;
&lt;span class="na"&gt;src/gz reboot_packages https://mirrors.ustc.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/packages&lt;/span&gt;
&lt;span class="na"&gt;src/gz reboot_routing https://mirrors.ustc.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/routing&lt;/span&gt;
&lt;span class="na"&gt;src/gz reboot_telephony https://mirrors.ustc.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/telephony&lt;/span&gt;

&lt;span class="c1"&gt;#src/gz reboot_core https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/targets/mvebu/generic/packages&lt;/span&gt;
&lt;span class="c1"&gt;#src/gz reboot_base https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/base&lt;/span&gt;
&lt;span class="c1"&gt;#src/gz reboot_luci https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/luci&lt;/span&gt;
&lt;span class="c1"&gt;#src/gz reboot_packages https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/packages&lt;/span&gt;
&lt;span class="c1"&gt;#src/gz reboot_routing https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/routing&lt;/span&gt;
&lt;span class="c1"&gt;#src/gz reboot_telephony https://mirrors.tuna.tsinghua.edu.cn/lede/releases/17.01.4/packages/arm_cortex-a9_vfpv3/telephony&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="geng-xin-xi-tong"&gt;更新系统&lt;/h3&gt;
&lt;p&gt;镜像源替换完成后，把所有已安装程序全部更新到最新&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg list-upgradable &lt;span class="p"&gt;|&lt;/span&gt; cut -f &lt;span class="m"&gt;1&lt;/span&gt; -d &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs opkg upgrade 
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="qi-ta_1"&gt;其他&lt;/h1&gt;
&lt;h3 id="yi-hua"&gt;汉化&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install luci-i18n-base-zh-cn
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="can-kao-lian-jie_1"&gt;参考链接&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/luci/getting-rid-of-luci-https-certificate-warnings"&gt;How to get rid of LuCI https certificate&amp;nbsp;warnings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-user/additional-software/extroot_configuration"&gt;Extroot&amp;nbsp;configuration&lt;/a&gt;&lt;/p&gt;</content><category term="openwrt"></category><category term="lede"></category><category term="wrt1900acs"></category></entry><entry><title>CentOS6数据库服务器配置</title><link href="https://www.solarck.com/centos6-datebase-server.html" rel="alternate"></link><published>2018-06-11T16:52:00+08:00</published><updated>2018-06-11T16:52:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-06-11:/centos6-datebase-server.html</id><summary type="html">&lt;p&gt;本文章仅用于记录在公司服务器上通过yum&amp;nbsp;repo来安装官方提供的数据库程序，而非通过编译方式来安装。通过官方仓库来安装有很多好处，比如升级、打补丁都很方便，不用编译浪费时间，更不需要安装多个版本的gcc来满足各种不同软件的要求。&lt;/p&gt;
&lt;h3 id="mysql"&gt;Mysql&lt;/h3&gt;
&lt;h4 id="xia-zai-an-zhuang-mysql-repo"&gt;&lt;strong&gt;下载安装mysql&amp;nbsp;repo&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;rpm -Uvh https://repo.mysql.com//mysql80-community-release-el6-1.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="sheng-ji-zhi-57ban-ben"&gt;&lt;strong&gt;升级至57版本&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yum --disablerepo=mysql80-community --enablerepo=mysql57-community upgrade&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当前默认是80版本，如果未来需要升级，如果未来一直要维持在57版本，那么建议修改配置文件，以免每次都带上两个参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/yum.repos.d/mysql-community.repo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Enable to use MySQL 5.7&lt;/span&gt;
&lt;span class="k"&gt;[mysql57-community]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;MySQL 5.7 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;本文章仅用于记录在公司服务器上通过yum&amp;nbsp;repo来安装官方提供的数据库程序，而非通过编译方式来安装。通过官方仓库来安装有很多好处，比如升级、打补丁都很方便，不用编译浪费时间，更不需要安装多个版本的gcc来满足各种不同软件的要求。&lt;/p&gt;
&lt;h3 id="mysql"&gt;Mysql&lt;/h3&gt;
&lt;h4 id="xia-zai-an-zhuang-mysql-repo"&gt;&lt;strong&gt;下载安装mysql&amp;nbsp;repo&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;rpm -Uvh https://repo.mysql.com//mysql80-community-release-el6-1.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="sheng-ji-zhi-57ban-ben"&gt;&lt;strong&gt;升级至57版本&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yum --disablerepo=mysql80-community --enablerepo=mysql57-community upgrade&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当前默认是80版本，如果未来需要升级，如果未来一直要维持在57版本，那么建议修改配置文件，以免每次都带上两个参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/yum.repos.d/mysql-community.repo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Enable to use MySQL 5.7&lt;/span&gt;
&lt;span class="k"&gt;[mysql57-community]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;MySQL 5.7 Community Server&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql&lt;/span&gt;

&lt;span class="k"&gt;[mysql80-community]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;MySQL 8.0 Community Server&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://repo.mysql.com/yum/mysql-8.0-community/el/6/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="an-zhuang-mysql-server"&gt;&lt;strong&gt;安装mysql-server&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yum install mysql-community-server&lt;/code&gt;&lt;/p&gt;
&lt;h4 id="kai-qi-fu-wu"&gt;&lt;strong&gt;开启服务&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;service mysqld start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然这时候还未配置mysql，开启服务可能会失败。默认配置文件在&lt;code&gt;/etc/my.cnf&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更多安装细节可以参照&lt;a href="https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/"&gt;mysql官方指南&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="mongo_1"&gt;Mongo&lt;/h3&gt;
&lt;h4 id="chuang-jian-repowen-jian"&gt;&lt;strong&gt;创建repo文件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim /etc/yum.repos.d/mongodb-org-3.6.repo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mongodb-org-3.6]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;MongoDB Repository&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.6/x86_64/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;https://www.mongodb.org/static/pgp/server-3.6.asc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="an-zhuang-mongozu-jian-he-ji"&gt;&lt;strong&gt;安装mongo组件合集&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;yum install -y mongodb-org&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mongo-org是一个合集，如果想精简安装各个组件，请参照下表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongodb-org&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A metapackage that will automatically install the four component packages listed below.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongodb-org-server&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains the mongod daemon and associated configuration and init scripts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongodb-org-mongos&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains the mongos daemon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongodb-org-shell&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains the mongo shell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongodb-org-tools&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains the following MongoDB tools: mongoimport bsondump, mongodump, mongoexport, mongofiles, mongoperf, mongorestore, mongostat, and mongotop.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="qi-dong-fu-wu"&gt;&lt;strong&gt;启动服务&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mongod -f /etc/mongod.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mongo默认不加载conf文件，所以用service方法是无法正常启动的，暂时使用自带方法开启服务。&lt;/p&gt;
&lt;p&gt;更多安装细节可以参照&lt;a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/"&gt;mongo官方指南&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="nginx_1"&gt;Nginx&lt;/h3&gt;
&lt;h4 id="chuang-jian-repowen-jian_1"&gt;&lt;strong&gt;创建repo文件&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim /etc/yum.repos.d/nginx.repo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[nginx]&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;nginx repo&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;http://nginx.org/packages/centos/$releasever/$basearch/&lt;/span&gt;
&lt;span class="na"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="an-zhuang-he-kai-qi-fu-wu"&gt;&lt;strong&gt;安装和开启服务&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install -y nginx
service nginx start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;service方法启动nginx默认会加载&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;配置。&lt;/p&gt;
&lt;h3 id="cha-kan-xi-tong-an-zhuang-lu-jing_1"&gt;查看系统安装路径&lt;/h3&gt;
&lt;p&gt;使用仓库安装有一点不是很清晰，那就是安装目录并非自己指定，有时需要修改一些文件时找不到文件在哪里，我们可以通过如下方法找到软件的所有文件目录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rpm -qa |grep mongodb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mongodb-org-mongos-3.6.5-1.el6.x86_64
mongodb-org-server-3.6.5-1.el6.x86_64
mongodb-org-tools-3.6.5-1.el6.x86_64
mongodb-org-3.6.5-1.el6.x86_64
mongodb-org-shell-3.6.5-1.el6.x86_64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例如我们要查看server的所有文件目录，则执行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rpm -ql mongodb-org-server-3.6.5-1.el6.x86_64&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/mongod
/etc/mongod.conf
/etc/sysconfig/mongod
/usr/bin/mongod
/usr/share/doc/mongodb-org-server-3.6.5
/usr/share/doc/mongodb-org-server-3.6.5/GNU-AGPL-3.0
/usr/share/doc/mongodb-org-server-3.6.5/MPL-2
/usr/share/doc/mongodb-org-server-3.6.5/README
/usr/share/doc/mongodb-org-server-3.6.5/THIRD-PARTY-NOTICES
/usr/share/man/man1/mongod.1
/var/lib/mongo
/var/log/mongodb
/var/log/mongodb/mongod.log
/var/run/mongodb
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="sshmian-mi-deng-lu-fu-wu-qi"&gt;SSH免密登录服务器&lt;/h3&gt;
&lt;p&gt;Linux上免密登录通常用RSA公钥和密钥实现，本地生成钥匙后，公钥上传至服务器，之后便可以免密登录了。&lt;/p&gt;
&lt;h4 id="ben-di-sheng-cheng-gong-yao-mi-yao"&gt;&lt;strong&gt;本地生成公钥密钥&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认公钥会存储在&lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;，备用。&lt;/p&gt;
&lt;h4 id="xiu-gai-fu-wu-qi-sshdpei-zhi"&gt;&lt;strong&gt;修改服务器sshd配置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;vim /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PubkeyAuthentication yes #解开注释
AuthorizedKeysFile .ssh/authorized_keys #解开注释
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="shang-chuan-ben-di-gong-yao-zhi-fu-wu-qi"&gt;&lt;strong&gt;上传本地公钥至服务器&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ssh-copy-id -i .ssh/id_rsa.pub -p port user@ip&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改上面的端口、用户名和ip，再在本地&lt;code&gt;.bashrc&lt;/code&gt;或&lt;code&gt;.zshrc&lt;/code&gt;新建一条alias就可以非常方便快捷的登录了。&lt;/p&gt;</content><category term="centos"></category><category term="ssh"></category><category term="linux"></category></entry><entry><title>使用Python发送Gmail</title><link href="https://www.solarck.com/python-send-gmail.html" rel="alternate"></link><published>2018-06-11T14:20:00+08:00</published><updated>2018-06-11T14:20:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-06-11:/python-send-gmail.html</id><summary type="html">&lt;p&gt;本文基于一个真实的项目，使用python3.6和最新官方smtplib接口。项目的目的是爬取网站，然后通过邮件给自己发送邮件提醒新文章。最后使用linux系统的crond服务定时执行。&lt;/p&gt;
&lt;h3 id="fa-you-jian-fang-fa"&gt;发邮件方法&lt;/h3&gt;
&lt;p&gt;在定义发邮件方法之前，我们还定义了一个类和类中的爬虫，单拿出来发邮件来说，代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sent_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fromaddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;
        &lt;span class="n"&gt;toaddrs&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"{}{}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y年%m月&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;日'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;'共有产权房信息'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'日期:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;标题:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;地址:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;k …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;本文基于一个真实的项目，使用python3.6和最新官方smtplib接口。项目的目的是爬取网站，然后通过邮件给自己发送邮件提醒新文章。最后使用linux系统的crond服务定时执行。&lt;/p&gt;
&lt;h3 id="fa-you-jian-fang-fa"&gt;发邮件方法&lt;/h3&gt;
&lt;p&gt;在定义发邮件方法之前，我们还定义了一个类和类中的爬虫，单拿出来发邮件来说，代码如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sent_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fromaddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;
        &lt;span class="n"&gt;toaddrs&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"{}{}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y年%m月&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;日'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;'共有产权房信息'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'日期:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;标题:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;地址:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'plain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'From'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fromaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'To'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;','&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toaddrs&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Subject'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;#message = f"From: {fromaddr}\nTo: {','.join(toaddrs)}\nSubject: {subject}\n\n{msg}"&lt;/span&gt;
        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;
        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'app password'&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'587'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ehlo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;starttls&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fromaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toaddrs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Send Email Successful.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Send Email Failed.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要注意的有几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;邮件正文需要是MIMEText格式的&lt;/li&gt;
&lt;li&gt;发信人、收信人、主题要用Header添加&lt;/li&gt;
&lt;li&gt;如果你的Google账号开启了两步验证，那么你的邮箱密码就不是登录密码，而是app密码，关于app密码怎么生成可以查看这篇文章&lt;a href="https://support.google.com/accounts/answer/185833#generate"&gt;Sign in using App&amp;nbsp;Passwords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;其他关于smtp地址和端口的问题，可以查看这篇文章&lt;a href="https://support.google.com/mail/answer/7126229?visit_id=1-636642850165284125-2014875658&amp;amp;hl=en&amp;amp;rd=1"&gt;Use &lt;span class="caps"&gt;IMAP&lt;/span&gt; to check Gmail on other email&amp;nbsp;clients&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="ding-shi-qi-dong"&gt;定时启动&lt;/h3&gt;
&lt;p&gt;创建一个文本文件，用于创建单一用户的crond文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; */3 * * /root/miniconda3/bin/python /root/monitor_house_info/monitor_house_info.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于crond配置，网上教程很多，或者&lt;code&gt;man 5 crontab&lt;/code&gt;就可以看到详细的用法。&lt;/p&gt;
&lt;p&gt;最后输入&lt;code&gt;crontab file&lt;/code&gt;导入文件，就可以坐等收邮件了。&lt;/p&gt;
&lt;h3 id="quan-bu-dai-ma"&gt;全部代码&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;


&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;requests_html&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HTMLSession&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;smtplib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.mime.text&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;email.header&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; : &lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt; : &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;monitor_house_info&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'db.json'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'http://cpzjw.bjchp.gov.cn/cpzjw/336693/index.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'http://cpzjw.bjchp.gov.cn/cpzjw/336551/336554/index.html'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realdb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Readed json db.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_news&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HTMLSession&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;element_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'div.easysite-article-content &amp;gt; ul &amp;gt; li &amp;gt; span.date04'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element_date&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;element_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'div.easysite-article-content &amp;gt; ul &amp;gt; li &amp;gt; span.title04'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element_content&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;absolute_links&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;element_content&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'geted web content.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;valid_news&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realdb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ensure_ascii&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'valided news.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sent_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fromaddr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;
        &lt;span class="n"&gt;toaddrs&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"{}{}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y年%m月&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;日'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;'共有产权房信息'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'日期:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;标题:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;地址:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MIMEText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'plain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'From'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fromaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'To'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;','&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toaddrs&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Subject'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'princelailai@gmail.com'&lt;/span&gt;
        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'app password'&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;smtplib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SMTP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'587'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ehlo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;starttls&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fromaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toaddrs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Send Email Successful.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Send Email Failed.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_news&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;valid_news&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent_email&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;moni&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitor_house_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;moni&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="gmail"></category></entry><entry><title>Pandas时间处理函数速度对比</title><link href="https://www.solarck.com/pandas-timeseries.html" rel="alternate"></link><published>2018-06-08T10:36:00+08:00</published><updated>2018-06-08T10:36:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-06-08:/pandas-timeseries.html</id><summary type="html">&lt;p&gt;Pandas非常擅长处理时间序列，拥有多种处理时间序列的函数和方法，自己做了几个小测试，看看内置函数都能适配哪种格式、哪种情况，速度又有多快。&lt;/p&gt;
&lt;p&gt;我用到的时间处理主要是对细粒度的时间重采样至粗粒度，之后再对重采样后的时间进行分组再进行后续操作，如求和、求平均或取最后值。&lt;/p&gt;
&lt;p&gt;所以我就设计两个场景，第一个场景是对频率为秒的时间序列重采样至一分钟然后求平均；第二个场景就是对频率为秒的时间序列重采样至3分钟然后对新的时间序列取每个时间的最新值。&lt;/p&gt;
&lt;p&gt;所以首先是要生成一组数据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;rng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2018-04-07'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2018-04-08'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'s'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Pandas非常擅长处理时间序列，拥有多种处理时间序列的函数和方法，自己做了几个小测试，看看内置函数都能适配哪种格式、哪种情况，速度又有多快。&lt;/p&gt;
&lt;p&gt;我用到的时间处理主要是对细粒度的时间重采样至粗粒度，之后再对重采样后的时间进行分组再进行后续操作，如求和、求平均或取最后值。&lt;/p&gt;
&lt;p&gt;所以我就设计两个场景，第一个场景是对频率为秒的时间序列重采样至一分钟然后求平均；第二个场景就是对频率为秒的时间序列重采样至3分钟然后对新的时间序列取每个时间的最新值。&lt;/p&gt;
&lt;p&gt;所以首先是要生成一组数据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;rng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2018-04-07'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'2018-04-08'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;freq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'s'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'random'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'random'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;df和ser分别对应DataFrame和Series，查看下数据格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;df.head()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;                       random
2018-04-07 00:00:00  0.163995
2018-04-07 00:00:01  0.756485
2018-04-07 00:00:02 -0.179441
2018-04-07 00:00:03  0.120944
2018-04-07 00:00:04 -1.558763
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ser.tail()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2018-04-07 23:59:56    1.276893
2018-04-07 23:59:57    0.275050
2018-04-07 23:59:58    1.029358
2018-04-07 23:59:59    0.461299
2018-04-08 00:00:00    1.222731
Freq: S, Name: random, dtype: float64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来定义六个函数方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_period&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Min'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_timestamp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;ser_idx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser_idx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'00'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Min'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asfreq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'3Min'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ffill'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;method6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'3Min'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;方法1-方法4适用于场景一，方法5-方法6适用于场景二，接下来具体说说这六个函数和为什么要这么设计场景。&lt;/p&gt;
&lt;p&gt;方法1使用的是内置to_period方法转换周期，to_timestamp方法是为了后续操作使用timestamp更方便。&lt;/p&gt;
&lt;p&gt;方法2对索引日期进行字符串格式化然后再用内置的to_datetime方法转换回日期格式达到重采样效果。&lt;/p&gt;
&lt;p&gt;方法3看似复杂，其实和方法二类似，我之所以加上方法三是因为我本以为这个办法处理会慢很多，但是最终结果还是有点出乎我的意料的。&lt;/p&gt;
&lt;p&gt;方法4是内置的resample方法&lt;/p&gt;
&lt;p&gt;方法5是内置的asfreq方法&lt;/p&gt;
&lt;p&gt;方法6还是内置的resample方法&lt;/p&gt;
&lt;p&gt;可以看到resample方法适用范围最广，既可以对时间采取多种细粒度的操作，也能对重采样后的数据进行后续操作；而asfreq方法只能对数据进行重采样，无法进行复杂的后续操作，只能用向前/向后填充数值；to_period方法和字符串操作只能对时间进行整数采样，像45分钟，1小时30分这种更细腻的操作是不支持的。&lt;/p&gt;
&lt;h3 id="bi-jiao-su-du"&gt;比较速度&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;场景1&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mf"&gt;16.4&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mi"&gt;391&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;439&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;2.52&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;485&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;10.8&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;2.13&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;9.92&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mf"&gt;23.8&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;72.2&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;446&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;2.71&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;492&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;3.61&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;1.63&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;15.1&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从上面对比数据得出结论，resample方法最快，to_period方法其次，两种字符串方法最慢，最快和最慢差距巨大。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;场景2&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mi"&gt;746&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;32.5&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;2.42&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;%timeit&lt;/span&gt; &lt;span class="n"&gt;method6&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mi"&gt;772&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;20.2&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mf"&gt;1.87&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="mf"&gt;50.5&lt;/span&gt; &lt;span class="err"&gt;&amp;micro;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;&amp;plusmn;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在场景二的测试中asfreq比resample快2倍多，如果不需要更多的后续操作，asfreq是很好的选择，否则resample方法更为全能。&lt;/p&gt;
&lt;p&gt;下方的表格总结了几种方法的优劣：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;时间细粒度操作&lt;/th&gt;
&lt;th&gt;时间分组后续操作&lt;/th&gt;
&lt;th&gt;速度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;asfreq&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resample&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;to_period&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="pandas-offset-aliases"&gt;Pandas Offset&amp;nbsp;Aliases&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Alias&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;business day frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;custom business day frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;calendar day frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;weekly frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;month end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;SM&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;semi-month end frequency (15th and end of month)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BM&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business month end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;CBM&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;custom business month end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;MS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;month start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;SMS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;semi-month start frequency (1st and 15th)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BMS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business month start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;CBMS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;custom business month start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Q&lt;/td&gt;
&lt;td&gt;quarter end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BQ&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business quarter end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;QS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;quarter start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BQS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business quarter start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A, Y&lt;/td&gt;
&lt;td&gt;year end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BA&lt;/span&gt;, &lt;span class="caps"&gt;BY&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business year end frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;AS&lt;/span&gt;, &lt;span class="caps"&gt;YS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;year start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BAS&lt;/span&gt;, &lt;span class="caps"&gt;BYS&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business year start frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class="caps"&gt;BH&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;business hour frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;hourly frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;T, min&lt;/td&gt;
&lt;td&gt;minutely frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;secondly frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L, ms&lt;/td&gt;
&lt;td&gt;milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U, us&lt;/td&gt;
&lt;td&gt;microseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;nanoseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="can-kao"&gt;参考&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/timeseries.html"&gt;官方文档&lt;/a&gt; &lt;/p&gt;</content><category term="python"></category><category term="pandas"></category></entry><entry><title>用数据验证定投是否优于直接投资</title><link href="https://www.solarck.com/Is-AIP-better-than-ETF.html" rel="alternate"></link><published>2018-06-06T17:27:00+08:00</published><updated>2018-06-06T17:27:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-06-06:/Is-AIP-better-than-ETF.html</id><summary type="html">&lt;p&gt;一直以来，定投的营销话术都是分批建仓，上涨时投资少降低成本，下跌时投资多赚取低估价值，但定投是否真的如宣传的那么美好？今天就用数据来模拟两种投资方式，看看孰优孰劣。&lt;/p&gt;
&lt;h3 id="shu-ju-shuo-ming"&gt;数据说明&lt;/h3&gt;
&lt;p&gt;本次实验使用三只ETF基金作为投资和定投标的，分别为华夏上证50ETF（510050），华泰柏瑞沪深300ETF（510300），广发中证500ETF（510510），时间区间为2013年5月27日至2018年6月7日。&lt;/p&gt;
&lt;p&gt;先上图了解下这段时间ETF基金大致走势。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;50ETF月线&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="上证50ETF" src="http://kevinstuchuang.qiniudn.com/blog-pic/ETF50close.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;500ETF周线&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="500ETF" src="http://kevinstuchuang.qiniudn.com/blog-pic/ETF500close.png"/&gt;&lt;/p&gt;
&lt;p&gt;这段区间整体来看是上涨的，大盘股涨的多，小盘股涨得少。分段来看2013年中至2014年中，属于震荡行情，2014年中至2015年中是暴涨行情，2015年中至2016年初是暴跌行情，2016年初至2018年中行情分化，大盘股再次进入牛市，中盘股属于慢牛，小盘股是横盘震荡走势。&lt;/p&gt;
&lt;p&gt;选择这个区间的行情，是因为这五年属于一个完整的周期，活跃时波动率大，行情过后的低迷时期波动率又小，是典型的中国股市。另外从长期来看，股票波动向上才应该是上市公司内在价值增长的表现。&lt;/p&gt;
&lt;p&gt;当然，用这个区间的数据做分析是有一个缺点的，就是这三只ETF基金整体涨幅都在40%-50%之间，如果在一开始就持有至当前日期，那么一定是一次性直接投资要优于定投，不过放心，后面编程不会让这种事情发生，我会加入时间随机项，尽量减小整体上涨带来的影响。&lt;/p&gt;
&lt;h3 id="kai-shi-shi-yan"&gt;开始实验&lt;/h3&gt;
&lt;p&gt;首先要导入用到的包 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;一直以来，定投的营销话术都是分批建仓，上涨时投资少降低成本，下跌时投资多赚取低估价值，但定投是否真的如宣传的那么美好？今天就用数据来模拟两种投资方式，看看孰优孰劣。&lt;/p&gt;
&lt;h3 id="shu-ju-shuo-ming"&gt;数据说明&lt;/h3&gt;
&lt;p&gt;本次实验使用三只ETF基金作为投资和定投标的，分别为华夏上证50ETF（510050），华泰柏瑞沪深300ETF（510300），广发中证500ETF（510510），时间区间为2013年5月27日至2018年6月7日。&lt;/p&gt;
&lt;p&gt;先上图了解下这段时间ETF基金大致走势。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;50ETF月线&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="上证50ETF" src="http://kevinstuchuang.qiniudn.com/blog-pic/ETF50close.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;500ETF周线&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="500ETF" src="http://kevinstuchuang.qiniudn.com/blog-pic/ETF500close.png"/&gt;&lt;/p&gt;
&lt;p&gt;这段区间整体来看是上涨的，大盘股涨的多，小盘股涨得少。分段来看2013年中至2014年中，属于震荡行情，2014年中至2015年中是暴涨行情，2015年中至2016年初是暴跌行情，2016年初至2018年中行情分化，大盘股再次进入牛市，中盘股属于慢牛，小盘股是横盘震荡走势。&lt;/p&gt;
&lt;p&gt;选择这个区间的行情，是因为这五年属于一个完整的周期，活跃时波动率大，行情过后的低迷时期波动率又小，是典型的中国股市。另外从长期来看，股票波动向上才应该是上市公司内在价值增长的表现。&lt;/p&gt;
&lt;p&gt;当然，用这个区间的数据做分析是有一个缺点的，就是这三只ETF基金整体涨幅都在40%-50%之间，如果在一开始就持有至当前日期，那么一定是一次性直接投资要优于定投，不过放心，后面编程不会让这种事情发生，我会加入时间随机项，尽量减小整体上涨带来的影响。&lt;/p&gt;
&lt;h3 id="kai-shi-shi-yan"&gt;开始实验&lt;/h3&gt;
&lt;p&gt;首先要导入用到的包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tushare&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ts&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后利用tushare包，获取到三只ETF基金的收盘价，放入一个DataFrame内，这里我创建了一个类，主要是为了代码整洁考虑。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AutoInvestmentPlan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ggplot'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'510050'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'510300'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'510510'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'2013-05-27'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_etf_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_k_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;combin_to_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;close_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;close_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_etf_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;close_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ETF50'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'ETF300'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'ETF500'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combin_to_df&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asfreq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pad'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asfreq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'W'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pad'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;获取数据需要对类实例化，然后就得到了周和月数据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;aip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AutoInvestmentPlan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;aip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里需要等待几秒种，运行完成后就可以查看我们的数据了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;周数据最新的5个收盘价&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aip.weekly.tail()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            ETF50  ETF300  ETF500
date                             
2018-05-06  2.634   3.770   1.646
2018-05-13  2.716   3.873   1.667
2018-05-20  2.733   3.899   1.670
2018-05-27  2.654   3.811   1.649
2018-06-03  2.643   3.777   1.588
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;月收益率数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;aip.monthly.pct_change().describe()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;           ETF50     ETF300     ETF500
count  60.000000  60.000000  60.000000
mean    0.008889   0.009014   0.009978
std     0.076945   0.073923   0.081489
min    -0.182533  -0.224457  -0.279845
25%    -0.022543  -0.018264  -0.025160
50%     0.002254   0.006061   0.015203
75%     0.035246   0.041125   0.049516
max     0.334728   0.254035   0.204142
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来在定义用来比较的函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{} close price'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;unit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,:]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_period'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_cum'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_period'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cumsum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'values'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;share_cum&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'payoff'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'values'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'payoff'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'AIP'&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;exceed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'from {} to {},dirctly invest ETF exceed AIP {:.2%}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;exceed&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exceed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;In {} times simulation,dirctly invest ETF exceed AIP&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s mean is {:.2%}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个比较函数从给定的ETF基金中的前半段时间随机选取一个日期，然后至少持有18个月，至多持有到当前日期，用这段时间的数据分别模拟在初始日期全部投资至结束和在区间内定投的收益情况。使用方法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#用每月定投1000元ETF50来比较
compare('ETF50',aip.monthly)

#用每周定投1000元ETF500来比较
compare('ETF500',aip.weekly)

#用每周定投500元ETF300来比较，共模拟10次，每次打印出走势对比图
compare('ETF300',aip.weekly,times=10,money=500,plot=True)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="bi-jiao-jie-guo"&gt;比较结果&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;compare('ETF50',aip.monthly)&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from 2015-09-30 to 2017-08-31,dirctly invest ETF exceed AIP 8.07%
from 2014-07-31 to 2016-06-30,dirctly invest ETF exceed AIP 30.34%
from 2014-09-30 to 2017-08-31,dirctly invest ETF exceed AIP 45.93%
from 2015-05-31 to 2017-12-31,dirctly invest ETF exceed AIP -26.74%
from 2014-03-31 to 2017-06-30,dirctly invest ETF exceed AIP 54.43%
from 2015-09-30 to 2017-04-30,dirctly invest ETF exceed AIP 4.29%
from 2015-07-31 to 2017-04-30,dirctly invest ETF exceed AIP -9.27%
from 2014-06-30 to 2016-10-31,dirctly invest ETF exceed AIP 47.17%
from 2015-07-31 to 2017-09-30,dirctly invest ETF exceed AIP -7.44%
from 2014-10-31 to 2016-06-30,dirctly invest ETF exceed AIP 31.91%
from 2014-07-31 to 2017-11-30,dirctly invest ETF exceed AIP 46.67%
from 2015-06-30 to 2017-08-31,dirctly invest ETF exceed AIP -22.72%
from 2014-04-30 to 2017-06-30,dirctly invest ETF exceed AIP 52.55%
from 2014-04-30 to 2016-12-31,dirctly invest ETF exceed AIP 44.92%
from 2014-04-30 to 2015-10-31,dirctly invest ETF exceed AIP 41.97%

In 15 times simulation,dirctly invest ETF exceed AIP's mean is 22.81%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;compare('ETF500',aip.weekly)&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from 2014-09-28 to 2017-07-09,dirctly invest ETF exceed AIP 28.72%
from 2014-06-08 to 2017-05-07,dirctly invest ETF exceed AIP 56.41%
from 2015-05-10 to 2018-04-29,dirctly invest ETF exceed AIP -20.97%
from 2014-02-09 to 2017-06-18,dirctly invest ETF exceed AIP 45.50%
from 2014-06-29 to 2016-07-17,dirctly invest ETF exceed AIP 55.89%
from 2015-07-12 to 2017-10-15,dirctly invest ETF exceed AIP -15.83%
from 2013-06-02 to 2017-04-30,dirctly invest ETF exceed AIP 40.71%
from 2014-06-08 to 2016-10-02,dirctly invest ETF exceed AIP 57.17%
from 2014-05-11 to 2018-01-07,dirctly invest ETF exceed AIP 64.35%
from 2014-09-07 to 2017-04-02,dirctly invest ETF exceed AIP 33.36%
from 2014-07-20 to 2018-03-25,dirctly invest ETF exceed AIP 47.74%
from 2014-03-30 to 2017-06-11,dirctly invest ETF exceed AIP 50.51%
from 2013-09-15 to 2015-11-22,dirctly invest ETF exceed AIP 44.02%
from 2015-03-08 to 2017-04-09,dirctly invest ETF exceed AIP 6.61%
from 2015-04-05 to 2017-01-29,dirctly invest ETF exceed AIP -13.85%

In 15 times simulation,dirctly invest ETF exceed AIP's mean is 32.02%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从上面的运行结果来看，把资金一次性全部投入比定投的平均收益是要高的，如果有兴趣，可以自己修改程序，改变开始和结束时间来验证结果，相信结论应该上面的相差不会太多。&lt;/p&gt;
&lt;p&gt;当然，定投也不是一无是处，至少对于当前资金不足，只想从每月工资中拿出一部分来投资的人来说，还是一种很好的投资方式的。&lt;/p&gt;
&lt;h3 id="wan-zheng-dai-ma"&gt;完整代码&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tushare&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ts&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AutoInvestmentPlan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ggplot'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'510050'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'510300'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'510510'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'2013-05-27'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_etf_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_k_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;combin_to_df&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;close_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;close_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_etf_close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;close_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ETF50'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'ETF300'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'ETF500'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combin_to_df&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asfreq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pad'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asfreq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'W'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pad'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{} close price'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;unit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'M'&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_period&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,:]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_period'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_cum'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'share_period'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cumsum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'values'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;share_cum&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'payoff'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'values'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cumsum_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'payoff'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'AIP'&lt;/span&gt;
        &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;exceed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subtract&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'from {} to {},dirctly invest ETF exceed AIP {:.2%}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;exceed&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exceed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;In {} times simulation,dirctly invest ETF exceed AIP&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;s mean is {:.2%}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;times&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="定投"></category><category term="ETF"></category></entry><entry><title>git和github主要使用方法</title><link href="https://www.solarck.com/git-and-github.html" rel="alternate"></link><published>2018-05-25T17:19:00+08:00</published><updated>2018-05-25T17:19:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-05-25:/git-and-github.html</id><summary type="html">&lt;h3 id="sshhe-mi-yao"&gt;ssh和密钥&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -b 4096 -C "princelailai@gmail.com"&lt;/code&gt;：生成密钥&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub&lt;/code&gt;：查看密钥&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -T git@github.com&lt;/code&gt;：测试密钥是否可以正常登录&lt;/p&gt;
&lt;h3 id="she-zhi"&gt;设置&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git config --list&lt;/code&gt;：列出当前repo所有设置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global user.name "princelai"&lt;/code&gt;：设置用户名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global user.email "princelailai@gmail.com"&lt;/code&gt;：设置E-mail&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo "# mydotfiles" &amp;gt; README.md&lt;/code&gt;：&lt;/p&gt;
&lt;h3 id="ji-ben-cao-zuo"&gt;基本操作&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git init …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h3 id="sshhe-mi-yao"&gt;ssh和密钥&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -b 4096 -C "princelailai@gmail.com"&lt;/code&gt;：生成密钥&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat ~/.ssh/id_rsa.pub&lt;/code&gt;：查看密钥&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -T git@github.com&lt;/code&gt;：测试密钥是否可以正常登录&lt;/p&gt;
&lt;h3 id="she-zhi"&gt;设置&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git config --list&lt;/code&gt;：列出当前repo所有设置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global user.name "princelai"&lt;/code&gt;：设置用户名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global user.email "princelailai@gmail.com"&lt;/code&gt;：设置E-mail&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo "# mydotfiles" &amp;gt; README.md&lt;/code&gt;：&lt;/p&gt;
&lt;h3 id="ji-ben-cao-zuo"&gt;基本操作&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;：初始化，创建.git文件夹&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;：查看当前工作区/缓存区状态&lt;/p&gt;
&lt;h3 id="tian-jia-he-ti-jiao"&gt;添加和提交&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git add &amp;lt;文件&amp;gt;&lt;/code&gt;：添加文件至缓存区&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -m "说明"&lt;/code&gt;：从缓存区提交至仓库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am "说明"&lt;/code&gt;：前面两种的合并版&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit --amend "说明"&lt;/code&gt;：替换掉上一次的提交&lt;/p&gt;
&lt;h3 id="shan-chu-wen-jian"&gt;删除文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git rm &amp;lt;文件&amp;gt;&lt;/code&gt;：从repo中删除文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rm --cached &amp;lt;文件&amp;gt;&lt;/code&gt;：&lt;/p&gt;
&lt;h3 id="hui-fu"&gt;恢复&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git checkout -- &amp;lt;文件&amp;gt;&lt;/code&gt;：撤销文件工作区的修改&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset HEAD &amp;lt;文件&amp;gt;&lt;/code&gt;：撤销文件暂存区的修改，放回工作区&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset --hard ad93b89&lt;/code&gt;：所有文件退回至指定版本&lt;/p&gt;
&lt;h3 id="ban-ben-he-ri-zhi"&gt;版本和日志&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git log --oneline&lt;/code&gt;:简版log&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log --graph&lt;/code&gt;：带合并图形版log&lt;/p&gt;
&lt;h3 id="yuan-cheng-cang-ku"&gt;远程仓库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git remote show origin&lt;/code&gt;：查看远程仓库详情&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone git-url&lt;/code&gt;：从远程仓库克隆至本地&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote add origin git-url&lt;/code&gt;：关联远程和本地仓库&lt;/p&gt;
&lt;h3 id="yuan-cheng-cang-ku-de-ti-jiao-he-la-qu"&gt;远程仓库的提交和拉取&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git pull origin master&lt;/code&gt;：把远程仓库拉取到本地仓库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push origin master&lt;/code&gt;：本地仓库推送至远程仓库，-u用于第一次关联&lt;/p&gt;
&lt;h3 id="fen-zhi"&gt;分支&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;：列出本地分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch -r&lt;/code&gt;：列出远程分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch -a&lt;/code&gt;：列出所有分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch &amp;lt;分支&amp;gt;&lt;/code&gt;：创建分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch -d &amp;lt;分支&amp;gt;&lt;/code&gt;：删除分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch --set-upstream-to=origin/分支 分支&lt;/code&gt;：本地和远程分支关联&lt;/p&gt;
&lt;h3 id="checkout"&gt;checkout&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git checkout 分支&lt;/code&gt;：切换到指定分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git checkout -b 分支&lt;/code&gt;：创建并切换到分支&lt;/p&gt;
&lt;h3 id="he-bing"&gt;合并&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git merge 分支&lt;/code&gt;：把指定分支合并到当前分支&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git merge --no-ff -m "说明" 分支&lt;/code&gt;：禁止Fast&amp;nbsp;forward模式，创建新的commit&lt;/p&gt;
&lt;h3 id="can-kao"&gt;参考&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/e4e29c9c3bd9"&gt;简书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000"&gt;廖雪峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html"&gt;阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="git"></category><category term="github"></category></entry><entry><title>用股票数据说明方差和标准差的特性</title><link href="https://www.solarck.com/using-python-descript-vaiance-std.html" rel="alternate"></link><published>2018-01-15T15:35:00+08:00</published><updated>2018-01-15T15:35:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-01-15:/using-python-descript-vaiance-std.html</id><summary type="html">&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/%E6%96%B9%E5%B7%AE"&gt;方差&lt;/a&gt;（Variance），应用数学里的专有名词。在概率论和统计学中，一个随机变量的方差描述的是它的离散程度，也就是该变量离其期望值的距离。一个实随机变量的方差也称为它的二阶矩或二阶中心动差，恰巧也是它的二阶累积量。这里把复杂说白了，就是将各个误差将之平方（而非取绝对值，使之肯定为正数），相加之后再除以总数，透过这样的方式来算出各个数据分布、零散（相对中心点）的程度。继续延伸的话，方差的算术平方根称为该随机变量的标准差（此为相对各个数据点间）。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/%E6%A8%99%E6%BA%96%E5%B7%AE"&gt;标准差&lt;/a&gt;（Standard Deviation，&lt;span class="caps"&gt;SD&lt;/span&gt;），数学符号 &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;（sigma），在概率统计中最常使用作为测量一组数值的离散程度之用。标准差定义：为方差开算术平方根，反映组内个体间的离散程度；标准差与期望值之比为标准离差率。&lt;/p&gt;
&lt;h3 id="1ding-yi"&gt;1.定义&lt;/h3&gt;
&lt;p&gt;方差的定义如下公式：
&lt;/p&gt;
&lt;div class="math"&gt;$$Var(X)=\sigma^2=E[(X-\mu)^2]$$&lt;/div&gt;
&lt;p&gt;
对上式化简后可得到如下公式：
&lt;/p&gt;
&lt;div class="math"&gt;$$\sigma^2=E[X^2]-(E …&lt;/div&gt;&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/%E6%96%B9%E5%B7%AE"&gt;方差&lt;/a&gt;（Variance），应用数学里的专有名词。在概率论和统计学中，一个随机变量的方差描述的是它的离散程度，也就是该变量离其期望值的距离。一个实随机变量的方差也称为它的二阶矩或二阶中心动差，恰巧也是它的二阶累积量。这里把复杂说白了，就是将各个误差将之平方（而非取绝对值，使之肯定为正数），相加之后再除以总数，透过这样的方式来算出各个数据分布、零散（相对中心点）的程度。继续延伸的话，方差的算术平方根称为该随机变量的标准差（此为相对各个数据点间）。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/%E6%A8%99%E6%BA%96%E5%B7%AE"&gt;标准差&lt;/a&gt;（Standard Deviation，&lt;span class="caps"&gt;SD&lt;/span&gt;），数学符号 &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;（sigma），在概率统计中最常使用作为测量一组数值的离散程度之用。标准差定义：为方差开算术平方根，反映组内个体间的离散程度；标准差与期望值之比为标准离差率。&lt;/p&gt;
&lt;h3 id="1ding-yi"&gt;1.定义&lt;/h3&gt;
&lt;p&gt;方差的定义如下公式：
&lt;/p&gt;
&lt;div class="math"&gt;$$Var(X)=\sigma^2=E[(X-\mu)^2]$$&lt;/div&gt;
&lt;p&gt;
对上式化简后可得到如下公式：
&lt;/p&gt;
&lt;div class="math"&gt;$$\sigma^2=E[X^2]-(E[X])^2$$&lt;/div&gt;
&lt;p&gt;
上面两个公式也可以写为下面这样：
&lt;/p&gt;
&lt;div class="math"&gt;$$\sigma^2=\frac{1}{N}\sum_{i=1}^{N}(x_i-\mu)^2=\frac{(\sum_{i=1}^{N}x_i^2-\mu^2)}{N}$$&lt;/div&gt;
&lt;p&gt;标准差的定义和公式和方差类似，就是对方差开平方根即可得到。&lt;/p&gt;
&lt;div class="math"&gt;$$SD(X) = \sigma = \sqrt{E(X-E(X))^2}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\sigma = \sqrt{\frac{\sum_{i=1}^NX_i^2}{N}-\mu^2}$$&lt;/div&gt;
&lt;div class="math"&gt;$$\sigma = \sqrt{\frac{(\sum_{i=1}^{N}x_i^2-\mu^2)}{N}}$$&lt;/div&gt;
&lt;h3 id="2zhun-bei-shu-ju"&gt;2.准备数据&lt;/h3&gt;
&lt;p&gt;这里使用一个开源免费的股票数据模块tushare，获取贵州茅台的数据，并截取数据的前600天，把数据平分为2部分。获取后的数据格式为DataFrame。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tushare&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ts&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_k_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'600519'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_loc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'close'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;stock_part1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;stock_part2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3te-xing-yan-zheng"&gt;3.特性验证&lt;/h3&gt;
&lt;p&gt;对于方差的计算，我们可以把数据带入公式直接计算，python代码可以这样写，这里使用的是无偏估计，所以分母是N-1。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不过幸好Numpy和Pandas都提供了快速计算方差和标准差的方法，我们可以调用&lt;code&gt;var()&lt;/code&gt;方法和&lt;code&gt;std()&lt;/code&gt;方法使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;性质1，一个常数被加至变量数列中，此数列方差不变。&lt;/strong&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$Var(X+c) = Var(X)$$&lt;/div&gt;
&lt;div class="math"&gt;$$SD(X+c) = SD(X)$$&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#方差&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#标准差&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;性质2，数列被放大一个常数倍，此数列的方差变大常数的平方倍&lt;/strong&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$Var(cX) = c^2 \times Var(X)$$&lt;/div&gt;
&lt;div class="math"&gt;$$SD(cX) = c \times SD(X)$$&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#方差&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#标准差&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;性质3，两个数列和（差）的方差&lt;/strong&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$Var(aX+bY)=a^2Var(X)+b^2Var(Y)+2 \times ab \times Cov(X,Y)$$&lt;/div&gt;
&lt;div class="math"&gt;$$Var(X-Y)=Var(X)+Var(Y)-2 \times Cov(X,Y)$$&lt;/div&gt;
&lt;p&gt;标准差也有同样的性质&lt;/p&gt;
&lt;div class="math"&gt;$$SD(X+Y)=\sqrt{\sigma^2(X)+\sigma^2(Y)+2 \times Cov(X,Y)}$$&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cov&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#方差&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isclose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;stock_part1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cov&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stock_part2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;#标准差&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="python"></category><category term="数学"></category><category term="统计学"></category></entry><entry><title>argparse模块简要用法</title><link href="https://www.solarck.com/argparse-brief-usage.html" rel="alternate"></link><published>2018-01-08T17:41:00+08:00</published><updated>2018-01-08T17:41:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2018-01-08:/argparse-brief-usage.html</id><summary type="html">&lt;p&gt;argparse是Python用于解析命令行参数的模块，拥有更强大的功能、更友好的使用方法，用来替代原始的sys.argv。&lt;/p&gt;
&lt;p&gt;argparse的大致用法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt; &lt;span class="c1"&gt;#导入模块&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#创建解析器&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#添加参数&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#解析参数&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建解析器时的可选参数很多，但没有特殊需求的情况下，默认参数就能很好的工作，所以这部分使用时临时查文档就能解决，不做过多记录。&lt;/p&gt;
&lt;p&gt;这里仅记录下添加参数时的各种选项搭配，使用方法和选项如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;metavar&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每一个参数的含义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;name or flags - 名称或选项字符串列表，例如。foo或-f,&amp;nbsp;&amp;mdash;foo …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;argparse是Python用于解析命令行参数的模块，拥有更强大的功能、更友好的使用方法，用来替代原始的sys.argv。&lt;/p&gt;
&lt;p&gt;argparse的大致用法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt; &lt;span class="c1"&gt;#导入模块&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#创建解析器&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#添加参数&lt;/span&gt;
&lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#解析参数&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建解析器时的可选参数很多，但没有特殊需求的情况下，默认参数就能很好的工作，所以这部分使用时临时查文档就能解决，不做过多记录。&lt;/p&gt;
&lt;p&gt;这里仅记录下添加参数时的各种选项搭配，使用方法和选项如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;metavar&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;每一个参数的含义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;name or flags - 名称或选项字符串列表，例如。foo或-f,&amp;nbsp;&amp;mdash;foo。&lt;/li&gt;
&lt;li&gt;action -&amp;nbsp;在命令行遇到此参数时要执行的操作的基本类型。&lt;/li&gt;
&lt;li&gt;nargs -&amp;nbsp;应该使用的命令行参数数。&lt;/li&gt;
&lt;li&gt;const -&amp;nbsp;某些动作和nargs选择所需的常量值。&lt;/li&gt;
&lt;li&gt;default -&amp;nbsp;如果参数在命令行中不存在，则生成的值。&lt;/li&gt;
&lt;li&gt;type -&amp;nbsp;应转换命令行参数的类型。&lt;/li&gt;
&lt;li&gt;choices -&amp;nbsp;参数的允许值的容器。&lt;/li&gt;
&lt;li&gt;required -&amp;nbsp;是否可以省略命令行选项（仅针对可选参数）。&lt;/li&gt;
&lt;li&gt;help -&amp;nbsp;参数的简要说明。&lt;/li&gt;
&lt;li&gt;metavar -&amp;nbsp;使用消息中参数的名称。&lt;/li&gt;
&lt;li&gt;dest -&amp;nbsp;要添加到由parse_args()返回的对象的属性的名称。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id="1-name-or-flags"&gt;1. name or&amp;nbsp;flags&lt;/h3&gt;
&lt;p&gt;唯一的必填参数，可以创建位置参数（必填）和可选参数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'PROG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--save'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'db'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'mysql'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Namespace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'mysql'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可选参数以&lt;code&gt;-&lt;/code&gt;或&lt;code&gt;--&lt;/code&gt;开始，其余的均为位置参数
大部分情况下，未填的可选参数默认都是&lt;code&gt;None&lt;/code&gt;,如果有&lt;code&gt;--&lt;/code&gt;开始的参数，则参数名以后面的字符串命名。&lt;/p&gt;
&lt;h3 id="2-action"&gt;2.&amp;nbsp;action&lt;/h3&gt;
&lt;p&gt;action用于将命令和动作关联起来，常用的动作有如下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;store -&amp;nbsp;仅保存参数后的值&lt;/li&gt;
&lt;li&gt;store_const -&amp;nbsp;保存一个常量，由const参数给出&lt;/li&gt;
&lt;li&gt;store_true -&amp;nbsp;给出参数则保存True值，不给出则为False&lt;/li&gt;
&lt;li&gt;store_false -&amp;nbsp;与上面相反&lt;/li&gt;
&lt;li&gt;append -&amp;nbsp;把多次调用的值保存为一个列表&lt;/li&gt;
&lt;li&gt;append_const -&amp;nbsp;把多次调用的常量保存为一个列表&lt;/li&gt;
&lt;li&gt;count -&amp;nbsp;计算参数出现的次数&lt;/li&gt;
&lt;li&gt;help -&amp;nbsp;打印帮助信息，默认自动添加&lt;/li&gt;
&lt;li&gt;version -&amp;nbsp;打印版本信息，配合version选项使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举几个例子&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'PROG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-sh'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--show'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'store_true'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'-sh'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Namespace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;给出&lt;code&gt;-sh&lt;/code&gt;参数，则show值为True&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'PROG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--arg1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'store_const'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--arg2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'store_const'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--arg3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'store_const'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'-a1'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Namespace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只给出a1参数，arg1的值为0。
没有给出a2参数，则a2的const没有被调用，使用default的值，当然default默认就是None，不写也可以。
a3参数其实就是store_true的实现。&amp;nbsp;const和default的区别就是当命令给出但是后面未接值时，使用const值，如果命令那个都没有给出，则使用default的值。&lt;/p&gt;
&lt;h3 id="3-nargs"&gt;3.&amp;nbsp;nargs&lt;/h3&gt;
&lt;p&gt;nargs定义参数后面值的个数，可选值有几种：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;N&amp;nbsp;(一个整数)&lt;/li&gt;
&lt;li&gt;?&lt;/li&gt;
&lt;li&gt;*&lt;/li&gt;
&lt;li&gt;+&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果懂正则表达式，那nargs的参数就很好理解，这里就不做过多解释，不过要注意一点，当nargs=1的时候，他的行为和不给出nargs是不一样的，前者是一个列表，后者是一个值。直接看例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'PROG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--args2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'?'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--args3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'+'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'-a3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'aa'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'bb'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;Namespace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'b'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;args2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'aa'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bb'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果很好理解，?可以配合const使用，其他的可以配合default使用，调用了就是一个列表，使用const或default就是一个值。&lt;/p&gt;
&lt;h3 id="4-typehe-metavar"&gt;4.&amp;nbsp;type和metavar&lt;/h3&gt;
&lt;p&gt;这两个参数偶尔能用到，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'PROG'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'a1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-a2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'--args2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;metavar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'STR'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SUPPRESS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'3'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt;指出不给参数不存储变量，否则默认是None，&amp;nbsp;打印help说明看看&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print_help&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PROG&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a2&lt;/span&gt; &lt;span class="n"&gt;STR&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;a1&lt;/span&gt;

&lt;span class="n"&gt;positional&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;a1&lt;/span&gt;

&lt;span class="n"&gt;optional&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;            &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a2&lt;/span&gt; &lt;span class="n"&gt;STR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;args2&lt;/span&gt; &lt;span class="n"&gt;STR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;metavar仅改变了help说明里的变量名。&lt;/p&gt;
&lt;h3 id="can-kao-wen-dang"&gt;参考文档&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/argparse.html"&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python.usyiyi.cn/translate/python_352/library/argparse.html"&gt;中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="python"></category><category term="argparse"></category></entry><entry><title>matplotlib中文字体配置</title><link href="https://www.solarck.com/matplotlib-chinese-fonts.html" rel="alternate"></link><published>2017-12-18T16:01:00+08:00</published><updated>2017-12-18T16:01:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2017-12-18:/matplotlib-chinese-fonts.html</id><summary type="html">&lt;p&gt;matplotlib是Python的优秀绘图包，但是不论是在Windows还是Linux中默认都是不支持中文的，尤其是在Linux中设置更加复杂一点，设置方法如下：&lt;/p&gt;
&lt;p&gt;首先我们需要获取到matplotlib配置文件的文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -c &lt;span class="s2"&gt;"import matplotlib as mpl;print(mpl.get_configdir())"&lt;/span&gt;
/home/kevin/.config/matplotlib
&lt;/pre&gt;&lt;/div&gt;
&lt;!--more--&gt;
&lt;p&gt;然后需要一个默认的matplotlibrc文件用于修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -c &lt;span class="s2"&gt;"import matplotlib as mpl;print(mpl.matplotlib_fname())"&lt;/span&gt;
/opt/anaconda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个位置会根据每个人安装位置不同而改变&lt;/p&gt;
&lt;p&gt;然后把默认的rc文件拷贝到用户的配置文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /opt/anaconda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc ~/.config …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;matplotlib是Python的优秀绘图包，但是不论是在Windows还是Linux中默认都是不支持中文的，尤其是在Linux中设置更加复杂一点，设置方法如下：&lt;/p&gt;
&lt;p&gt;首先我们需要获取到matplotlib配置文件的文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -c &lt;span class="s2"&gt;"import matplotlib as mpl;print(mpl.get_configdir())"&lt;/span&gt;
/home/kevin/.config/matplotlib
&lt;/pre&gt;&lt;/div&gt;
&lt;!--more--&gt;
&lt;p&gt;然后需要一个默认的matplotlibrc文件用于修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -c &lt;span class="s2"&gt;"import matplotlib as mpl;print(mpl.matplotlib_fname())"&lt;/span&gt;
/opt/anaconda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个位置会根据每个人安装位置不同而改变&lt;/p&gt;
&lt;p&gt;然后把默认的rc文件拷贝到用户的配置文件夹&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /opt/anaconda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc ~/.config/matplotlib
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;之后的工作都是围绕这个rc文件，一般情况下只需要修改如下两个字段，把注释打开。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;font.sans-serif     : DejaVu Sans, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva
axes.unicode_minus  : False
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一个字段负责中文字体显示，但是目前还没有，第二个负责正负号的显示。&lt;/p&gt;
&lt;p&gt;由于matplotlib不使用系统字体，所以需要找到一个matplotlib支持的字体且已在系统中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fc-list :lang=zh |grep -i ttf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在shell中执行这个命令，就能找到几个字体，选择一个填到上面第一行第一个即可，通常建议选择&lt;code&gt;Droid Sans Fallback&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改好后重启整个python或ipython之后应该就可以看到中文，不过还是不可以的话可以使用下面方案二查找，这个方法出自&lt;a href="https://segmentfault.com/a/1190000000621721"&gt;segmentfault&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#! /usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FontManager&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;fm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FontManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mat_fonts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ttflist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'fc-list :lang=zh -f "%{family}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;"'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'utf8'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;zh_fonts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;','&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;available&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mat_fonts&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;zh_fonts&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'可用的字体'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不想使用rc文件来配置，那么可以在每次使用的时候在python中执行以下命令即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'font.sans-serif'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Droid Sans Fallback'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'axes.unicode_minus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="matplotlib"></category></entry><entry><title>自定义Linux桌面启动程序</title><link href="https://www.solarck.com/linux-desktop-entries.html" rel="alternate"></link><published>2017-11-17T15:58:00+08:00</published><updated>2017-11-17T15:58:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2017-11-17:/linux-desktop-entries.html</id><summary type="html">&lt;p&gt;Anaconda自带的Spyder是一个我最喜欢使用的IDE，对于科学计算有很好的支持，但是在Linux上它并没有自带.desktop文件，所以并不能在程序列表里找到，每次都要手动在命令行执行才能开启，非常不方便，所以决定自己搜索下方法，自己给它添加一个桌面快捷方式。&lt;/p&gt;
&lt;p&gt;Linux的主流DE的桌面文件都遵循&lt;a href="https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#recognized-keys"&gt;桌面配置项规范&lt;/a&gt;，按照这个规范配置一个相应的.desktop文件，放在指定的目录即可，当然你也可以放在&lt;code&gt;~/.local/share/applications/&lt;/code&gt;目录里，这样这个快捷方式只针对当前用户。&lt;/p&gt;
&lt;!--more--&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spyder&lt;/span&gt;
&lt;span class="n"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spyder&lt;/span&gt;
&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scientific&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;Development&lt;/span&gt; &lt;span class="n"&gt;EnviRonment&lt;/span&gt;
&lt;span class="n"&gt;TryExec&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Anaconda自带的Spyder是一个我最喜欢使用的IDE，对于科学计算有很好的支持，但是在Linux上它并没有自带.desktop文件，所以并不能在程序列表里找到，每次都要手动在命令行执行才能开启，非常不方便，所以决定自己搜索下方法，自己给它添加一个桌面快捷方式。&lt;/p&gt;
&lt;p&gt;Linux的主流DE的桌面文件都遵循&lt;a href="https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html#recognized-keys"&gt;桌面配置项规范&lt;/a&gt;，按照这个规范配置一个相应的.desktop文件，放在指定的目录即可，当然你也可以放在&lt;code&gt;~/.local/share/applications/&lt;/code&gt;目录里，这样这个快捷方式只针对当前用户。&lt;/p&gt;
&lt;!--more--&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spyder&lt;/span&gt;
&lt;span class="n"&gt;GenericName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Spyder&lt;/span&gt;
&lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Scientific&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;Development&lt;/span&gt; &lt;span class="n"&gt;EnviRonment&lt;/span&gt;
&lt;span class="n"&gt;TryExec&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;
&lt;span class="n"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;
&lt;span class="n"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Development&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Science&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;IDE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="mf"&gt;.6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spyder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;
&lt;span class="n"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;StartupNotify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TryExec和Exec后面是可执行文件的地址，可以只写后者
Icon是快捷方式的图标，没有的话可以去网上下载一个或者根据自己喜好随便放一个。
更多内容可以参考这篇&lt;a href="https://wiki.archlinux.org/index.php/Desktop_entries_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)"&gt;Wiki&lt;/a&gt;&lt;/p&gt;</content><category term="linux"></category></entry><entry><title>VPS搭梯子指南——shadowsocks+BBR+obfs</title><link href="https://www.solarck.com/shadowsocks-libev.html" rel="alternate"></link><published>2017-11-13T15:55:00+08:00</published><updated>2018-06-05T13:01:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2017-11-13:/shadowsocks-libev.html</id><summary type="html">&lt;p&gt;近期开会导致墙越来越高，迫不得已升级自建的ss服务，由于shadowsocks原版已经停更，shadowsocksR也已经删库，所以就锁定libev版本。
&lt;strong&gt;&lt;em&gt;注：以下服务器端内容请切换到root操作&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="1-sheng-ji-debian"&gt;1.&amp;nbsp;升级Debian&lt;/h3&gt;
&lt;p&gt;在升级之前，我需要先把服务器从Debian 8升级到Debian&amp;nbsp;9，如果不是Debian用户，或者不想升级的可以跳过，这一步不影响后续操作，但是部分代码可能需要修改。&lt;/p&gt;
&lt;p&gt;首先要把Debian&amp;nbsp;8升级到最新版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt update
apt upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;备份源列表&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /etc/apt/sources.list /etc/apt/sources.list-jessie
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改源列表，把jessie 替换为&amp;nbsp;stretch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/apt/sources.list
:s/jessie/stretch/g
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再次更新升级&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; apt update
 apt …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;近期开会导致墙越来越高，迫不得已升级自建的ss服务，由于shadowsocks原版已经停更，shadowsocksR也已经删库，所以就锁定libev版本。
&lt;strong&gt;&lt;em&gt;注：以下服务器端内容请切换到root操作&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="1-sheng-ji-debian"&gt;1.&amp;nbsp;升级Debian&lt;/h3&gt;
&lt;p&gt;在升级之前，我需要先把服务器从Debian 8升级到Debian&amp;nbsp;9，如果不是Debian用户，或者不想升级的可以跳过，这一步不影响后续操作，但是部分代码可能需要修改。&lt;/p&gt;
&lt;p&gt;首先要把Debian&amp;nbsp;8升级到最新版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt update
apt upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;备份源列表&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /etc/apt/sources.list /etc/apt/sources.list-jessie
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改源列表，把jessie 替换为&amp;nbsp;stretch&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/apt/sources.list
:s/jessie/stretch/g
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再次更新升级&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; apt update
 apt upgrade
 apt dist-upgrade
 apt autoremove
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="2-kai-qi-bbr"&gt;2.&amp;nbsp;开启BBR&lt;/h3&gt;
&lt;p&gt;使用一键脚本安装并开启bbr，此步除OpenVZ以外的服务器都可以开启，跳过不影响后续内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget --no-check-certificate https://raw.githubusercontent.com/princelai/across/master/bbr.sh
chmod +x bbr.sh
./bbr.sh
echo "net.core.default_qdisc=fq" &amp;gt;&amp;gt; /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" &amp;gt;&amp;gt; /etc/sysctl.conf
sysctl -p
lsmod | grep bbr
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3-an-zhuang-shadowsocks-libevhe-simple-obfshun-yao"&gt;3.&amp;nbsp;安装shadowsocks-libev和simple-obfs混淆&lt;/h3&gt;
&lt;p&gt;需要从stretch-backports库中安装，非Debian 9用户请参考&lt;a href="https://github.com/shadowsocks/shadowsocks-libev#pre-build-configure-guide"&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh -c &lt;span class="s1"&gt;'printf "deb http://deb.debian.org/debian stretch-backports main" &amp;gt; /etc/apt/sources.list.d/stretch-backports.list'&lt;/span&gt;
apt update
apt -t stretch-backports install shadowsocks-libev simple-obfs
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="4-you-hua-tcpwang-luo"&gt;4.&amp;nbsp;优化TCP网络&lt;/h3&gt;
&lt;p&gt;编辑sysctl文件，把下面的内容复制过去，&amp;nbsp;如果第二步中没有开启bbr，那么请删除前两行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;net.core.default_qdisc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;fq&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_congestion_control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;bbr&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_fastopen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;3&lt;/span&gt;
&lt;span class="na"&gt;fs.file-max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1024000&lt;/span&gt;
&lt;span class="na"&gt;net.core.rmem_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;67108864&lt;/span&gt;
&lt;span class="na"&gt;net.core.wmem_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;67108864&lt;/span&gt;
&lt;span class="na"&gt;net.core.rmem_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;65536&lt;/span&gt;
&lt;span class="na"&gt;net.core.wmem_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;65536&lt;/span&gt;
&lt;span class="na"&gt;net.core.netdev_max_backlog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4096&lt;/span&gt;
&lt;span class="na"&gt;net.core.somaxconn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4096&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_syncookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_tw_reuse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_tw_recycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;0&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_fin_timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;30&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_keepalive_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1200&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.ip_local_port_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;10000 65000&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_max_syn_backlog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4096&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_max_tw_buckets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;5000&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_rmem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4096 87380 67108864&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_wmem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;4096 65536 67108864&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.tcp_mtu_probing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;span class="na"&gt;net.ipv4.ip_forward&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改保存后执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="5-pei-zhi-fu-wu-duan"&gt;5.&amp;nbsp;配置服务端&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;修改配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑配置文件，填上自己的密码，端口建议使用443，别的端口封杀的太严重。
关于加密方式，现在新版都支持AEAD加密方式，详细内容请点&lt;a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/shadowsocks-libev/config.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"server_port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"local_port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"timeout"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"chacha20-ietf-poly1305"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"mode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"tcp_and_udp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"fast_open"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"plugin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"obfs-server"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"plugin_opts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"obfs=tls"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;启动服务器端服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果已经按照上面编辑好配置文件，那么就可以直接用文件模式启动服务。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ss-server -c config.json &lt;span class="c1"&gt;#测试模式&lt;/span&gt;
systemctl start shadowsocks-libev &lt;span class="c1"&gt;#后台启动&lt;/span&gt;
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; shadowsocks-libev &lt;span class="c1"&gt;#开机启动&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="6-pei-zhi-ke-hu-duan"&gt;6.&amp;nbsp;配置客户端&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载&lt;a href="https://github.com/shadowsocks/shadowsocks-windows/releases"&gt;shadowsocks-windows&lt;/a&gt;解压缩，
下载&lt;a href="https://github.com/imgk/simple-obfs-Cygwin/releases"&gt;simple-obfs&lt;/a&gt;中的obfs-local.exe和msys-2.0.dll放到shadowsocks-windows目录中,obfs-host随意写一个中国可以访问的网站。
&lt;img alt="shadowsocks-windows" src="http://kevinstuchuang.qiniudn.com/blog-pic/shadowsocks-windows.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装客户端和obfs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -Syu
sudo pacman -S shadowsocks-libev simple-obfs
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;开启本地服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nohup ss-local -c config.json --plugin obfs-local --plugin-opts "obfs=tls;obfs-host=cn.bing.com"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;开机启动，编辑启动文件&amp;nbsp;，添加obfs混淆&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /usr/lib/systemd/system/shadowsocks-libev@.service&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Unit]&lt;/span&gt;
&lt;span class="na"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;Shadowsocks-Libev Client Service&lt;/span&gt;
&lt;span class="na"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;network.target&lt;/span&gt;

&lt;span class="k"&gt;[Service]&lt;/span&gt;
&lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;simple&lt;/span&gt;
&lt;span class="na"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;nobody&lt;/span&gt;
&lt;span class="na"&gt;CapabilityBoundingSet&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;CAP_NET_BIND_SERVICE&lt;/span&gt;
&lt;span class="na"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/bin/ss-local -c /etc/shadowsocks/%i.json --plugin obfs-local --plugin-opts "obfs=tls;obfs-host=cn.bing.com"&lt;/span&gt;

&lt;span class="k"&gt;[Install]&lt;/span&gt;
&lt;span class="na"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;multi-user.target&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑配置文件
&lt;code&gt;vim /etc/shadowsocks/libev.json&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"你的服务器IP"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"server_port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"local_address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"127.0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"local_port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;65509&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"你的密码"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"timeout"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"chacha20-ietf-poly1305"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"fast_open"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"workers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"prefer_ipv6"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;开启服务，@后面要和json文件同名&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start shadowsocks-libev@libev
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt;  shadowsocks-libev@libev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他内容请参考&lt;a href="https://wiki.archlinux.org/index.php/Shadowsocks_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#.E5.91.BD.E4.BB.A4.E8.A1.8C"&gt;Archlinux Wiki&lt;/a&gt;&amp;nbsp;shadowsocks-qt5目前功能严重缺失，不建议使用，Linux平台最好是命令行模式&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN"&gt;SwitchyOmega&lt;/a&gt;是目前Chome最好的代理插件，可以在&lt;a href="https://www.switchyomega.com/download.html"&gt;官网&lt;/a&gt;下载最新版本安装。&lt;/p&gt;
&lt;h3 id="7androidke-hu-duan-pei-zhi"&gt;7.Android客户端配置&lt;/h3&gt;
&lt;p&gt;如果Android手机可以访问Google&amp;nbsp;Play，则可以直接在上面搜shadowsocks和obfs分别安装后再配置即可。&lt;/p&gt;
&lt;p&gt;如果当前手机不能访问Play，可以在github releases上分别下载&lt;a href="https://github.com/shadowsocks/shadowsocks-android/releases"&gt;shadowsocks-android&lt;/a&gt;和&lt;a href="https://github.com/shadowsocks/simple-obfs-android/releases"&gt;simple-obfs-android&lt;/a&gt;，安装后再配置自己的服务端信息。&lt;/p&gt;
&lt;h3 id="8socks5zhuan-httphttps"&gt;8.socks5转http/https&lt;/h3&gt;
&lt;p&gt;实际使用中，经常会遇到命令行终端或本地程序需要代理，但是他们只支持http或https协议，所以就需要把socks5协议的代理转换协议，以Archlinux为例，方法也很简单。&lt;/p&gt;
&lt;p&gt;安装privoxy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S privoxy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改配置，找到如下两行打开注释，注意listen后的端口是未来我们要使用的端口，默认为8118，forward后的端口是shadowsocks使用的本地端口，这个依据自己的配置修改，不要忘了最后的&amp;rdquo;.&amp;rdquo;。
&lt;code&gt;sudo vim /etc/privoxy/config&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;listen-address  &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:8118
forward-socks5t   /   &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:65509 .
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存配置后，启动或重启服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start privoxy
sudo systemctl restart privoxy
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以后需要使用时，修改两个本地变量即可&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:8118
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:8118
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="9-fu-wu-qi-duan-chang-yong-de-ming-ling"&gt;9.&amp;nbsp;服务器端常用的命令&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#测试ss+obfs是否正常启动&lt;/span&gt;
ss-server -c config.json --plugin obfs-server --plugin-opts &lt;span class="s2"&gt;"obfs=http"&lt;/span&gt;
&lt;span class="c1"&gt;#查看obfs的进程编号&lt;/span&gt;
ps ax&lt;span class="p"&gt;|&lt;/span&gt;grep obfs
&lt;span class="c1"&gt;#查看ss的进程编号&lt;/span&gt;
ps ax&lt;span class="p"&gt;|&lt;/span&gt;grep ss-server
&lt;span class="c1"&gt;#查看ss监听端口&lt;/span&gt;
netstat -nlp &lt;span class="p"&gt;|&lt;/span&gt;grep ss-server
&lt;/pre&gt;&lt;/div&gt;</content><category term="shadowsocks"></category></entry><entry><title>配置pip和conda</title><link href="https://www.solarck.com/config-pip-conda.html" rel="alternate"></link><published>2017-11-07T11:43:00+08:00</published><updated>2017-11-07T11:43:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2017-11-07:/config-pip-conda.html</id><summary type="html">&lt;p&gt;首先需要确认已经安装Python环境，建议用于科学计算的朋友下载安装&lt;a href="https://www.anaconda.com/download/"&gt;Anaconda&lt;/a&gt;或者&lt;a href="https://conda.io/miniconda.html"&gt;Miniconda&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="huan-jing-bian-liang-he-qi-yong-pei-zhi"&gt;环境变量和启用配置&lt;/h3&gt;
&lt;p&gt;安装好后还需要把安装路径添加到系统环境变量&lt;/p&gt;
&lt;p&gt;Linux用户查看系统环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows用户查看系统环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; %PATH%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有Anaconda的路径，就需要自己手动添加&lt;/p&gt;
&lt;p&gt;Linux用户编辑~/.bashrc，在最后添加以下内容，注意自己修改安装路径&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/anaconda3/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后再执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有效果，可是尝试编辑~/.profile或 ~/.bash_profile文件&amp;nbsp;zsh或其他shell用户可以自行修改&lt;/p&gt;
&lt;p&gt;Windows用户在cmd执行如下命令，如果不是默认安装到用户目录，需要手动修改下路径。如果创建了自定义env，那么root改为你自己的env名字。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;%USERPROFILE%&lt;span class="se"&gt;\A&lt;/span&gt;naconda3&lt;span class="p"&gt;;&lt;/span&gt;%USERPROFILE%&lt;span class="se"&gt;\A&lt;/span&gt;naconda3&lt;span class="se"&gt;\L&lt;/span&gt;ibrary&lt;span class="se"&gt;\b&lt;/span&gt;in …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;首先需要确认已经安装Python环境，建议用于科学计算的朋友下载安装&lt;a href="https://www.anaconda.com/download/"&gt;Anaconda&lt;/a&gt;或者&lt;a href="https://conda.io/miniconda.html"&gt;Miniconda&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="huan-jing-bian-liang-he-qi-yong-pei-zhi"&gt;环境变量和启用配置&lt;/h3&gt;
&lt;p&gt;安装好后还需要把安装路径添加到系统环境变量&lt;/p&gt;
&lt;p&gt;Linux用户查看系统环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows用户查看系统环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; %PATH%
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有Anaconda的路径，就需要自己手动添加&lt;/p&gt;
&lt;p&gt;Linux用户编辑~/.bashrc，在最后添加以下内容，注意自己修改安装路径&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/anaconda3/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后再执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有效果，可是尝试编辑~/.profile或 ~/.bash_profile文件&amp;nbsp;zsh或其他shell用户可以自行修改&lt;/p&gt;
&lt;p&gt;Windows用户在cmd执行如下命令，如果不是默认安装到用户目录，需要手动修改下路径。如果创建了自定义env，那么root改为你自己的env名字。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;%USERPROFILE%&lt;span class="se"&gt;\A&lt;/span&gt;naconda3&lt;span class="p"&gt;;&lt;/span&gt;%USERPROFILE%&lt;span class="se"&gt;\A&lt;/span&gt;naconda3&lt;span class="se"&gt;\L&lt;/span&gt;ibrary&lt;span class="se"&gt;\b&lt;/span&gt;in&lt;span class="p"&gt;;&lt;/span&gt;%USERPROFILE%&lt;span class="se"&gt;\A&lt;/span&gt;naconda3&lt;span class="se"&gt;\S&lt;/span&gt;cripts&lt;span class="p"&gt;;&lt;/span&gt;%PATH%
activate root
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="geng-huan-yuan"&gt;更换源&lt;/h3&gt;
&lt;p&gt;conda官方源非常慢，甚至有时候经常无法连接；pip时快时慢，也是经常无法连接，所以我们把更新源换为国内的，加快更新速度。&lt;/p&gt;
&lt;h4 id="pip"&gt;&lt;strong&gt;pip&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;目前国内常用的pip源有&lt;a href="http://mirrors.aliyun.com/help/pypi"&gt;阿里云&lt;/a&gt;和豆瓣。&lt;/p&gt;
&lt;p&gt;Linux用户编辑~/.pip/pip.conf文件，粘贴以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="na"&gt;index-url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;https://pypi.doubanio.com/simple/&lt;/span&gt;
&lt;span class="na"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;columns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="na"&gt;index-url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;https://mirrors.aliyun.com/pypi/simple/&lt;/span&gt;
&lt;span class="na"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;columns&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows用户编辑%&lt;span class="caps"&gt;USERPROFILE&lt;/span&gt;%\pip\pip.ini，没有就新建一个，内容和Linux一样。&lt;/p&gt;
&lt;h4 id="conda"&gt;&lt;strong&gt;conda&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;目前国内常用的conda源有&lt;a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"&gt;清华&lt;/a&gt;和&lt;a href="http://mirrors.ustc.edu.cn/help/anaconda.html"&gt;中科大&lt;/a&gt;两个&lt;/p&gt;
&lt;p&gt;Linux和Windows用户执行下面的命令添加conda源&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="geng-xin_1"&gt;更新&lt;/h3&gt;
&lt;h4 id="conda_1"&gt;&lt;strong&gt;conda&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;conda常用更新命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda update XXX        &lt;span class="c1"&gt;#更新XXX包&lt;/span&gt;
conda update --all      &lt;span class="c1"&gt;#更新所有可更新的包到最新&lt;/span&gt;
conda update conda      &lt;span class="c1"&gt;#conda整体升级，并不一定最新，但是稳定&lt;/span&gt;
conda update anaconda   &lt;span class="c1"&gt;#同上&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;conda其他常用命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda info              &lt;span class="c1"&gt;#当前conda环境信息&lt;/span&gt;
conda install XXX       &lt;span class="c1"&gt;#安装XXX&lt;/span&gt;
conda search XXX        &lt;span class="c1"&gt;#搜索XXX&lt;/span&gt;
conda clean --all       &lt;span class="c1"&gt;#清除无用包和缓存&lt;/span&gt;
conda list &amp;gt; a.txt      &lt;span class="c1"&gt;#输出所有已安装的包&lt;/span&gt;
conda remove XXX        &lt;span class="c1"&gt;#卸载XXX&lt;/span&gt;
conda config --get channels     &lt;span class="c1"&gt;#获取当前使用的源，配合下面的命令使用&lt;/span&gt;
conda config --remove channels https://XXX
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="pip_1"&gt;&lt;strong&gt;pip&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;pip常用更新命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip search XXX      &lt;span class="c1"&gt;#搜索&lt;/span&gt;
pip install XXX     &lt;span class="c1"&gt;#安装&lt;/span&gt;
pip uninstall XXX   &lt;span class="c1"&gt;#卸载&lt;/span&gt;
pip list &amp;gt; b.txt    &lt;span class="c1"&gt;#列出所有已安装的包&lt;/span&gt;
pip list -o         &lt;span class="c1"&gt;#列出所有可更新的包&lt;/span&gt;
pip show XXX        &lt;span class="c1"&gt;#查看包的路径和依赖等信息&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pip"></category><category term="conda"></category><category term="python"></category></entry><entry><title>openwrt开启Samba作为共享中心</title><link href="https://www.solarck.com/openwrt-samba.html" rel="alternate"></link><published>2014-01-05T01:29:00+08:00</published><updated>2014-01-05T01:29:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2014-01-05:/openwrt-samba.html</id><summary type="html">&lt;p&gt;为Openwrt接入一个大U盘，不用来作共享中心的话实在没什么用处了，这也是为日后脱机BT下载提供一个基础。&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install samba36-server luci-app-samba
&lt;/pre&gt;&lt;/div&gt;
&lt;!--more--&gt;
&lt;h4 id="pei-zhi-wen-jian"&gt;配置文件&lt;/h4&gt;
&lt;p&gt;samba的配置文件只有两个，而且默认配置稍作修改就可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt:~# vi /etc/samba/smb.conf.template
&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="o"&gt;]&lt;/span&gt;
    netbios &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; OpenWrt
    display &lt;span class="nv"&gt;charset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; UTF-8
    &lt;span class="nv"&gt;interfaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1/8 lo &lt;span class="m"&gt;192&lt;/span&gt;.168.3.1/24 fd73:3a9a:156::1/60 br-lan &lt;span class="c1"&gt;#内网IP&lt;/span&gt;
    server &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; OpenWrt …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;为Openwrt接入一个大U盘，不用来作共享中心的话实在没什么用处了，这也是为日后脱机BT下载提供一个基础。&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install samba36-server luci-app-samba
&lt;/pre&gt;&lt;/div&gt;
&lt;!--more--&gt;
&lt;h4 id="pei-zhi-wen-jian"&gt;配置文件&lt;/h4&gt;
&lt;p&gt;samba的配置文件只有两个，而且默认配置稍作修改就可以使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt:~# vi /etc/samba/smb.conf.template
&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="o"&gt;]&lt;/span&gt;
    netbios &lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; OpenWrt
    display &lt;span class="nv"&gt;charset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; UTF-8
    &lt;span class="nv"&gt;interfaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1/8 lo &lt;span class="m"&gt;192&lt;/span&gt;.168.3.1/24 fd73:3a9a:156::1/60 br-lan &lt;span class="c1"&gt;#内网IP&lt;/span&gt;
    server &lt;span class="nv"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; OpenWrt
    unix &lt;span class="nv"&gt;charset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; UTF-8
    &lt;span class="nv"&gt;workgroup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; WORKGROUP
    &lt;span class="nv"&gt;browseable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    &lt;span class="nv"&gt;deadtime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt;
    domain &lt;span class="nv"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    encrypt &lt;span class="nv"&gt;passwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
    &lt;span class="nb"&gt;enable&lt;/span&gt; core &lt;span class="nv"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; no
    guest &lt;span class="nv"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nobody &lt;span class="c1"&gt;#匿名用户&lt;/span&gt;
    guest &lt;span class="nv"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes &lt;span class="c1"&gt;#匿名用户&lt;/span&gt;
    invalid &lt;span class="nv"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; root
    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    load &lt;span class="nv"&gt;printers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; no
    map to &lt;span class="nv"&gt;guest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Bad User
    max &lt;span class="nv"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; SMB2
    min receivefile &lt;span class="nv"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;16384&lt;/span&gt;
    null &lt;span class="nv"&gt;passwords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes &lt;span class="c1"&gt;#无需密码&lt;/span&gt;
    obey pam &lt;span class="nv"&gt;restrictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    os &lt;span class="nv"&gt;level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;
    passdb &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; smbpasswd
    preferred &lt;span class="nv"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    &lt;span class="nv"&gt;printable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; no
    &lt;span class="nv"&gt;security&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; user
    smb &lt;span class="nv"&gt;encrypt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; disabled
    smb passwd &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /etc/samba/smbpasswd
    socket &lt;span class="nv"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; TCP_NODELAY IPTOS_LOWDELAY
    &lt;span class="nv"&gt;syslog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
    use &lt;span class="nv"&gt;sendfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes
    &lt;span class="nv"&gt;writeable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; yes &lt;span class="c1"&gt;#可写&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt:~# vi /etc/config/samba
config samba
    option &lt;span class="s1"&gt;'name'&lt;/span&gt;           &lt;span class="s1"&gt;'OpenWrt'&lt;/span&gt;
    option &lt;span class="s1"&gt;'workgroup'&lt;/span&gt;      &lt;span class="s1"&gt;'WORKGROUP'&lt;/span&gt;
    option &lt;span class="s1"&gt;'description'&lt;/span&gt;        &lt;span class="s1"&gt;'OpenWrt'&lt;/span&gt;
    option &lt;span class="s1"&gt;'homes'&lt;/span&gt;          &lt;span class="s1"&gt;'1'&lt;/span&gt;

config &lt;span class="s1"&gt;'sambashare'&lt;/span&gt;
    option &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="s1"&gt;'Shares'&lt;/span&gt;
    option &lt;span class="s1"&gt;'path'&lt;/span&gt; &lt;span class="s1"&gt;'/share'&lt;/span&gt; &lt;span class="c1"&gt;#samba所在目录&lt;/span&gt;
&lt;span class="c1"&gt;#   option 'users' 'sandra'&lt;/span&gt;
    option &lt;span class="s1"&gt;'guest_ok'&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt;
    option &lt;span class="s1"&gt;'create_mask'&lt;/span&gt; &lt;span class="s1"&gt;'0777'&lt;/span&gt; &lt;span class="c1"&gt;#所有用户可写&lt;/span&gt;
    option &lt;span class="s1"&gt;'dir_mask'&lt;/span&gt; &lt;span class="s1"&gt;'0777'&lt;/span&gt; &lt;span class="c1"&gt;#所有用户可写&lt;/span&gt;
    option &lt;span class="s1"&gt;'read_only'&lt;/span&gt; &lt;span class="s1"&gt;'no'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我的配置是无需密码所有用户都可以访问，可上传可下载。&lt;/p&gt;
&lt;p&gt;配置完还需要对目录进行权限提升&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod a+w /share
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者更改文件夹用户&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chown nobody:nobody /share
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后重启samba服务并开机启动&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/samba restart
/etc/init.d/samba &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="fang-wen_1"&gt;访问&lt;/h3&gt;
&lt;p&gt;Windows用户很容易访问，在网络邻居（网络）里就可以看到WORKGROUP&amp;mdash;&amp;gt;&lt;span class="caps"&gt;OPENWRT&lt;/span&gt;&amp;mdash;&amp;gt;Share文件夹了，但是linux用户需要一些其他命令。  &lt;br/&gt;
&lt;strong&gt;1.&amp;nbsp;安装g2sc&lt;/strong&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S g2sc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完就可以像Windows一样看到工作组和文件夹，但是只能下载，没有上传功能。    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. sambclient&lt;/strong&gt;&amp;nbsp;安装工具&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S sambaclient
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;连接主机    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kevin@kevin:pts/2 ~$: smbclient -L OPENWRT
Enter kevins password:  &lt;span class="c1"&gt;#没设密码直接回车&lt;/span&gt;

    Sharename       Type      Comment
    ---------       ----      -------
    Shares          Disk      
    IPC$            IPC       IPC Service &lt;span class="o"&gt;(&lt;/span&gt;OpenWrt&lt;span class="o"&gt;)&lt;/span&gt;

    Server               Comment
    ---------            -------
    CHEN-PC              
    OPENWRT              OpenWrt

    Workgroup            Master
    ---------            -------
    WORKGROUP            OPENWRT
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kevin@kevin:pts/2 ~$: smbclient //OPENWRT/Shares &lt;span class="c1"&gt;#格式为//Servername/Sharename&lt;/span&gt;
smb: &lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;出现了smb的命令行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;get ****    &lt;span class="c1"&gt;#下载某个文件    &lt;/span&gt;
put ****    &lt;span class="c1"&gt;#上传某个文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多命令输入?查看&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;mount挂载&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kevin@kevin:pts/2 ~$: mkdir /mnt/samba
kevin@kevin:pts/2 ~$: sudo mount -t cifs  -l //OPENWRT/Shares /mnt/samba
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="wan-cheng"&gt;完成&lt;/h3&gt;
&lt;p&gt;由于安装了Luci，所以开启了uhttp服务，把共享目录链接到/www目录同样可以通过浏览器直接下载，相当于把Samba目录同样做成了FTP目录。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kevin@kevin:pts/2 ~$: ln -s /share /www/share
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Samba共享就全部完成，之后再继续研究BT下载，配合Samba的共享就等于免费拥有了一个简版NAS。&lt;/p&gt;</content><category term="openwrt"></category></entry><entry><title>用extroot为openwrt扩充存储空间</title><link href="https://www.solarck.com/openwrt-extroot.html" rel="alternate"></link><published>2014-01-03T01:48:00+08:00</published><updated>2014-01-03T01:48:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2014-01-03:/openwrt-extroot.html</id><summary type="html">&lt;p&gt;水星这款MW4350r内存为128M，运行很多程序都不在话下。但是却只提供了8M&amp;nbsp;Flash存储空间，而路由器系统还占了1.9M，剩下的5M空间不足以支持安装很多软件，比如我在安装python的时候就报错提示存储空间不足，这确实很郁闷，但幸好Openwrt还提供了extroot方式来扩展存储，来发挥路由器和Openwrt系统的真正实力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pivot-overlay还是pivot-root？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我把两种方式都试过，pivot-overlay方式不能够把安装程序的位置移到USB存储装置上，但是pivot-root方式可以，所以我选择了后者。pivot-root方式使/覆盖掉了/overlay成为rootfs，我认为这种方式更接近原生的Linux系统。  &lt;br/&gt;
而从官方的文档来看，目前pivot-root已经没有以前的缺点和不足，选择哪个已经是个人需求而不是技术问题了。  &lt;br/&gt;
网上大部分文章帖子都是2009-2010年间的，所以大部分可能都是pivot-overlay的。如果对这部分不太理解，请仔细阅读官方Wiki：&lt;a href="http://wiki.openwrt.org/doc/howto/extroot/extroot.theory"&gt;ExtRoot: How it works&lt;/a&gt;,&lt;a href="http://wiki.openwrt.org/doc/techref/flash.layout"&gt;The OpenWrt Flash&amp;nbsp;Layout&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;
&lt;h3 id="an-zhuang-bi-yao-de-bao"&gt;安装必要的包&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install e2fsprogs kmod-usb-core kmod-usb2 kmod-usb-storage usbutils kmod-fs-ext4 block-mount
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;e2fsprogs包提供了mkfs（mkfs.ext3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;水星这款MW4350r内存为128M，运行很多程序都不在话下。但是却只提供了8M&amp;nbsp;Flash存储空间，而路由器系统还占了1.9M，剩下的5M空间不足以支持安装很多软件，比如我在安装python的时候就报错提示存储空间不足，这确实很郁闷，但幸好Openwrt还提供了extroot方式来扩展存储，来发挥路由器和Openwrt系统的真正实力。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pivot-overlay还是pivot-root？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我把两种方式都试过，pivot-overlay方式不能够把安装程序的位置移到USB存储装置上，但是pivot-root方式可以，所以我选择了后者。pivot-root方式使/覆盖掉了/overlay成为rootfs，我认为这种方式更接近原生的Linux系统。  &lt;br/&gt;
而从官方的文档来看，目前pivot-root已经没有以前的缺点和不足，选择哪个已经是个人需求而不是技术问题了。  &lt;br/&gt;
网上大部分文章帖子都是2009-2010年间的，所以大部分可能都是pivot-overlay的。如果对这部分不太理解，请仔细阅读官方Wiki：&lt;a href="http://wiki.openwrt.org/doc/howto/extroot/extroot.theory"&gt;ExtRoot: How it works&lt;/a&gt;,&lt;a href="http://wiki.openwrt.org/doc/techref/flash.layout"&gt;The OpenWrt Flash&amp;nbsp;Layout&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;
&lt;h3 id="an-zhuang-bi-yao-de-bao"&gt;安装必要的包&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install e2fsprogs kmod-usb-core kmod-usb2 kmod-usb-storage usbutils kmod-fs-ext4 block-mount
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;e2fsprogs包提供了mkfs（mkfs.ext3,mkfs.ext4）、fsck等工具。  &lt;br/&gt;
kmod-usb2只提供了USb2.0的驱动，如果你的是USB1.0（1.1）的，还需要单独安装驱动。  &lt;br/&gt;
kmod-fs-ext4是用来挂载ext4文件系统的，如果你想使用ext3文件格式就安装相应的包。  &lt;br/&gt;&amp;nbsp;usbutils不是必装，仅提供了lsusb命令。&lt;/p&gt;
&lt;h3 id="ge-shi-hua-upan"&gt;格式化U盘&lt;/h3&gt;
&lt;p&gt;插好U盘后，先查看下是否被系统识别出来&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt: ~# lsusb
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device &lt;span class="m"&gt;002&lt;/span&gt;: ID &lt;span class="m"&gt;0781&lt;/span&gt;:5571 SanDisk Corp. Cruzer Fit
Bus &lt;span class="m"&gt;001&lt;/span&gt; Device &lt;span class="m"&gt;001&lt;/span&gt;: ID 1d6b:0002 Linux Foundation &lt;span class="m"&gt;2&lt;/span&gt;.0 root hub
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt: ~# ls /dev/sd*
/dev/sda    /dev/sda1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;已经正确识别出来了，格式化系统为ext4&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkfs.ext4 /dev/sda1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;挂载到当前系统&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount /dev/sda1 /mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建一个128M的swap文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mnt/swap &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;65536&lt;/span&gt;
mkswap /mnt/swap
swapon /mnt/swap
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="extroot"&gt;extroot&lt;/h3&gt;
&lt;p&gt;把/目录下的文件迁移到U盘,pivot-root方式，适用于Barrier&amp;nbsp;Breaker（trunk）版本&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /tmp/cproot
mount --bind / /tmp/cproot
tar -C /tmp/cproot -cvf - . &lt;span class="p"&gt;|&lt;/span&gt; tar -C /mnt/ -xf -
umount /tmp/cproot
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="bian-ji-fstab"&gt;编辑fstab&lt;/h3&gt;
&lt;p&gt;我的系统默认没有/etc/config/fstab文件，可以用命令生成一个&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;block detect &amp;gt; /etc/config/fstab
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑这个文件，添加下面这段配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;config mount
        option target        /
        option device        /dev/sda1
        option fstype        ext4
        option options       rw,sync
        option enabled       &lt;span class="m"&gt;1&lt;/span&gt;
        option enabled_fsck  &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启后，查看下空间，如果类似我这样就是成功了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt: ~# df -h
Filesystem                Size      Used Available Use% Mounted on
rootfs                    &lt;span class="m"&gt;7&lt;/span&gt;.2G    &lt;span class="m"&gt;169&lt;/span&gt;.9M      &lt;span class="m"&gt;6&lt;/span&gt;.7G   &lt;span class="m"&gt;2&lt;/span&gt;% /
/dev/root                 &lt;span class="m"&gt;1&lt;/span&gt;.8M      &lt;span class="m"&gt;1&lt;/span&gt;.8M         &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;% /rom
tmpfs                    &lt;span class="m"&gt;61&lt;/span&gt;.7M      &lt;span class="m"&gt;1&lt;/span&gt;.0M     &lt;span class="m"&gt;60&lt;/span&gt;.7M   &lt;span class="m"&gt;2&lt;/span&gt;% /tmp
/dev/sda1                 &lt;span class="m"&gt;7&lt;/span&gt;.2G    &lt;span class="m"&gt;169&lt;/span&gt;.9M      &lt;span class="m"&gt;6&lt;/span&gt;.7G   &lt;span class="m"&gt;2&lt;/span&gt;% /
tmpfs                   &lt;span class="m"&gt;512&lt;/span&gt;.0K         &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;512&lt;/span&gt;.0K   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大功告成，现在系统空间足够大了，任你怎么安装怎么下载。&lt;/p&gt;</content><category term="openwrt"></category></entry><entry><title>水星（Mercury）MW4530r刷Openwrt</title><link href="https://www.solarck.com/install-openwrt-on-mw4530r.html" rel="alternate"></link><published>2014-01-02T01:08:00+08:00</published><updated>2014-01-02T01:08:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2014-01-02:/install-openwrt-on-mw4530r.html</id><summary type="html">&lt;p&gt;经过两天的不屑折腾，终于为我的Mw4530r安装上了Openwrt。从最后安装成功往回看，其实整个过程非常简单，但是由于是第一次接触，走了不少弯路，本应该一个小时就完成的工作，却整整花了我两天时间。再次发篇文章庆祝下，也给其他朋友一些参考。&lt;/p&gt;
&lt;h3 id="xia-zai-wen-jian"&gt;下载文件&lt;/h3&gt;
&lt;p&gt;水星这款路由器是ar71xx芯片的，因为较新，所以还没有官方的稳定版。在Openwrt的&lt;a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx/"&gt;snapshots/trunk&lt;/a&gt;目录搜索下载我们需要的刷机文件，一般情况一个型号有两个文件，一个名字里带factory，从其他固件系统刷Openwrt下载这个文件；一个名字带sysupgrade，已经是Openwrt系统的用此文件升级。&lt;/p&gt;
&lt;h3 id="shua-ji"&gt;刷机&lt;/h3&gt;
&lt;p&gt;组装好路由器，接通电源，电脑网卡口连接路由器任意Lan口，打开浏览器访问http://192.168.1.1&amp;nbsp;就可以看见水星的原厂界面。利用原厂固件的升级功能，提交下载好的Openwrt刷机文件即可直接刷机，非常的方便。稍等片刻等待路由器自动重启，此时刷机完成。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h3 id="chu-shi-hua"&gt;初始化&lt;/h3&gt;
&lt;p&gt;Openwrt的固件是不带UI界面的，在安装用户界面之前，用户需要先进行简单的初始化工作。  &lt;br/&gt;&amp;nbsp;使用telnet登陆路由器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;telnet &lt;span class="m"&gt;192&lt;/span&gt;.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Linux系统自带命令，Windows用户需要在控制面板 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;经过两天的不屑折腾，终于为我的Mw4530r安装上了Openwrt。从最后安装成功往回看，其实整个过程非常简单，但是由于是第一次接触，走了不少弯路，本应该一个小时就完成的工作，却整整花了我两天时间。再次发篇文章庆祝下，也给其他朋友一些参考。&lt;/p&gt;
&lt;h3 id="xia-zai-wen-jian"&gt;下载文件&lt;/h3&gt;
&lt;p&gt;水星这款路由器是ar71xx芯片的，因为较新，所以还没有官方的稳定版。在Openwrt的&lt;a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx/"&gt;snapshots/trunk&lt;/a&gt;目录搜索下载我们需要的刷机文件，一般情况一个型号有两个文件，一个名字里带factory，从其他固件系统刷Openwrt下载这个文件；一个名字带sysupgrade，已经是Openwrt系统的用此文件升级。&lt;/p&gt;
&lt;h3 id="shua-ji"&gt;刷机&lt;/h3&gt;
&lt;p&gt;组装好路由器，接通电源，电脑网卡口连接路由器任意Lan口，打开浏览器访问http://192.168.1.1&amp;nbsp;就可以看见水星的原厂界面。利用原厂固件的升级功能，提交下载好的Openwrt刷机文件即可直接刷机，非常的方便。稍等片刻等待路由器自动重启，此时刷机完成。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h3 id="chu-shi-hua"&gt;初始化&lt;/h3&gt;
&lt;p&gt;Openwrt的固件是不带UI界面的，在安装用户界面之前，用户需要先进行简单的初始化工作。  &lt;br/&gt;&amp;nbsp;使用telnet登陆路由器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;telnet &lt;span class="m"&gt;192&lt;/span&gt;.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Linux系统自带命令，Windows用户需要在控制面板&amp;mdash;&amp;gt;程序里面启用telnet功能。&lt;/p&gt;
&lt;p&gt;修改登录密码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;passwd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改好密码后，dropbear（ssh）登录方式开启，telnet登录方式关闭。&lt;/p&gt;
&lt;p&gt;退出telnet，用ssh方式登陆，Windows用户可以下载putty登陆&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
ssh root@192.168.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;到此我们已经成功初始化了Openwrt。&lt;/p&gt;
&lt;h3 id="wang-luo-pei-zhi"&gt;网络配置&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;强烈建议基础配置尤其是网络设置都使用CLI界面，切勿乱修改原始配置，我就在这里经历的惨痛的教训&lt;/strong&gt;&lt;br/&gt;&amp;nbsp;我使用的是联通ADSL，所以需要拨号（pppoe）才能上网。     &lt;/p&gt;
&lt;p&gt;配置网络连接，修改wan部分&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@openwrt:~# vi /etc/config/network
config interface &lt;span class="s1"&gt;'wan'&lt;/span&gt;
    option ifname &lt;span class="s1"&gt;'eth0.2'&lt;/span&gt;
    option proto &lt;span class="s1"&gt;'pppoe'&lt;/span&gt;
    option username &lt;span class="s1"&gt;'ISP提供的用户名'&lt;/span&gt;
    option password &lt;span class="s1"&gt;'密码'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者用uci方式进行配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uci &lt;span class="nb"&gt;set&lt;/span&gt; network.wan.proto&lt;span class="o"&gt;=&lt;/span&gt;pppoe
uci &lt;span class="nb"&gt;set&lt;/span&gt; network.wan.username&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ISP提供的用户名'&lt;/span&gt;
uci &lt;span class="nb"&gt;set&lt;/span&gt; network.wan.password&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'密码'&lt;/span&gt;
uci commit network
ifup wan
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置wifi，根据你的路由器配置生成一个默认的配置文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wifi detect &amp;gt; /etc/config/wireless
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启后，互联网和wifi都应该已经正常工作，wifi的密码和名称我们之后可以在UI界面修改，接下来安装用户界面。&lt;/p&gt;
&lt;h3 id="yong-hu-jie-mian"&gt;用户界面&lt;/h3&gt;
&lt;p&gt;安装Luci    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;opkg update
opkg install luci luci-ssl luci-i18n-chinese
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动Luci服务&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/uhttpd start
/etc/init.d/uhttpd &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开浏览器输入http://192.168.1.1&amp;nbsp;，就可以进入WebUI界面了，现在就可以向普通路由器一样进行管理了。&lt;/p&gt;
&lt;h3 id="xiao-ti-shi"&gt;小提示&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;1.MW4530r进入failsafe的方法是：路由器断电&amp;mdash;&amp;gt;接通电源&amp;mdash;&amp;gt;断续的按面板前的WPS键，直到SYS指示灯从慢闪变为快闪就是成功进入了failsafe模式了。  &lt;br/&gt;
2.初始配置尽量用CLI方式配置（或uci），最好不要用WebUI。&amp;nbsp;3.不要乱动乱删配置文件，尤其是端口路由表（switch0）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;贴一张Openwrt的路由架构图，这张图帮助我理解了端口和路由的关系。      &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.macfreek.nl/memory/images/Linksys_internals.png" title="switch" width="450"/&gt;&lt;/p&gt;</content><category term="openwrt"></category></entry><entry><title>修复变砖的WNR2200</title><link href="https://www.solarck.com/repair-wnr2200.html" rel="alternate"></link><published>2013-12-31T21:51:00+08:00</published><updated>2013-12-31T21:51:00+08:00</updated><author><name>Kevin Chen</name></author><id>tag:www.solarck.com,2013-12-31:/repair-wnr2200.html</id><summary type="html">&lt;p&gt;手中有个NetGear&amp;nbsp;WNR2200路由器，当初买这个就是看重可以刷机,但是买回来才发现只能刷DD-wrt，于是就刷了DD安心的用了半年。  &lt;/p&gt;
&lt;p&gt;最近看到Openwrt的trunk目录里有我这款机器的固件了，立刻操刀刷起。不幸的是刷完后telnet不通网关，failsafe模式也无法开启。无奈中发现NetGear官网提供了tftp小工具确实有效，让我变砖的路由器起死回生。&lt;/p&gt;
&lt;p&gt;方法也很简单，官方文库里说明的很详细，这里简单记录下要点。  &lt;br/&gt;
1.下载工具和路由器官方固件  &lt;br/&gt;
2.打开下载好的软件，设置好网关192.168.1.1，加载下载好的固件，密码不用填    &lt;br/&gt;&amp;nbsp;3.断开路由器电源10秒左右，之后接通电源，立刻点击软件上的Upgrade，等待修复完成&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;修复好后决定这个路由器还是老实的用DD-wrt，抛开扩展性和一些不是特别常用的功能，&lt;span class="caps"&gt;DD&lt;/span&gt;-wrt确实和所有路由器官方提供的固件一样人性化，当初刷完DD-wrt稳定运行了半年多，无重启、无断流，稳定性不是盖的。不想受Openwrt折磨的人可以在DD-wrt的&lt;a href="ftp://dd-wrt.com/others/eko/BrainSlayer-V24-preSP2"&gt;FTP目录&lt;/a&gt;里按照日期和型号索引自己的路由器。&lt;/p&gt;
&lt;p&gt;当然自己也不会放弃Openwrt，自己又入手了一个水星MW4530r，300元内可刷Openwrt的性价比神器,继续折腾Openwrt去了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://neclub.netgear.cn/Knowledgebase/Document_detail.aspx?Did=934"&gt;网件官方文库&lt;/a&gt; &lt;a href="http://www.shadowsoftware.net/shadowgameworld/downloads/tftp2.exe"&gt;工具下载地址&lt;/a&gt; &lt;br/&gt;
如果地址不可用，可Google&amp;nbsp;tftp2.exe …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;手中有个NetGear&amp;nbsp;WNR2200路由器，当初买这个就是看重可以刷机,但是买回来才发现只能刷DD-wrt，于是就刷了DD安心的用了半年。  &lt;/p&gt;
&lt;p&gt;最近看到Openwrt的trunk目录里有我这款机器的固件了，立刻操刀刷起。不幸的是刷完后telnet不通网关，failsafe模式也无法开启。无奈中发现NetGear官网提供了tftp小工具确实有效，让我变砖的路由器起死回生。&lt;/p&gt;
&lt;p&gt;方法也很简单，官方文库里说明的很详细，这里简单记录下要点。  &lt;br/&gt;
1.下载工具和路由器官方固件  &lt;br/&gt;
2.打开下载好的软件，设置好网关192.168.1.1，加载下载好的固件，密码不用填    &lt;br/&gt;&amp;nbsp;3.断开路由器电源10秒左右，之后接通电源，立刻点击软件上的Upgrade，等待修复完成&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;修复好后决定这个路由器还是老实的用DD-wrt，抛开扩展性和一些不是特别常用的功能，&lt;span class="caps"&gt;DD&lt;/span&gt;-wrt确实和所有路由器官方提供的固件一样人性化，当初刷完DD-wrt稳定运行了半年多，无重启、无断流，稳定性不是盖的。不想受Openwrt折磨的人可以在DD-wrt的&lt;a href="ftp://dd-wrt.com/others/eko/BrainSlayer-V24-preSP2"&gt;FTP目录&lt;/a&gt;里按照日期和型号索引自己的路由器。&lt;/p&gt;
&lt;p&gt;当然自己也不会放弃Openwrt，自己又入手了一个水星MW4530r，300元内可刷Openwrt的性价比神器,继续折腾Openwrt去了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://neclub.netgear.cn/Knowledgebase/Document_detail.aspx?Did=934"&gt;网件官方文库&lt;/a&gt; &lt;a href="http://www.shadowsoftware.net/shadowgameworld/downloads/tftp2.exe"&gt;工具下载地址&lt;/a&gt; &lt;br/&gt;
如果地址不可用，可Google&amp;nbsp;tftp2.exe&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="路由器"></category></entry></feed>